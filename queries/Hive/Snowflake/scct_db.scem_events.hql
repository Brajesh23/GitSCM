! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_EVENTS
(SELECT COALESCE(CASE WHEN TRIM( EHDR.BATCH_GUID) = '' THEN NULL ELSE EHDR.BATCH_GUID END, 'n/a') AS BATCH_GUID, COALESCE(CASE WHEN TRIM( EHDR.CITY1) = '' THEN NULL ELSE EHDR.CITY1 END, 'n/a') AS TOWN_OR_CITY, COALESCE(CASE WHEN EHDR.CLIENT = '' THEN NULL ELSE EHDR.CLIENT END, 0) AS CLIENT, COALESCE(CASE WHEN TRIM( EHDR.COUNTRY1) = '' THEN NULL ELSE EHDR.COUNTRY1 END, 'n/a') AS COUNTRY_INDICATOR, COALESCE(CASE WHEN TRIM( EHDR.DATACS) = '' THEN NULL ELSE EHDR.DATACS END, 'n/a') AS DATA_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.DATAID) = '' THEN NULL ELSE EHDR.DATAID END, 'n/a') AS DATA_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.DCNFTP) = '' THEN NULL ELSE EHDR.DCNFTP END, 'n/a') AS CONFIRMATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.ELCCOD) = '' THEN NULL ELSE EHDR.ELCCOD END, 'n/a') AS ESTIMATE_DATE_LOC_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.ELCID1) = '' THEN NULL ELSE EHDR.ELCID1 END, 'n/a') AS ESTIMATION_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.ELCID2) = '' THEN NULL ELSE EHDR.ELCID2 END, 'n/a') AS ESTIMATE_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.ESTQUL) = '' THEN NULL ELSE EHDR.ESTQUL END, 'n/a') AS EST_TM_QUALIFIER, COALESCE(CASE WHEN EHDR.ETXTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS ESTIMATED_TM_UTC_TS, COALESCE(CASE WHEN EHDR.EVLTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS LOCAL_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTCOD) = '' THEN NULL ELSE EHDR.EVTCOD END, 'n/a') AS EXT_EVENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EVTDAT) = 0 THEN NULL ELSE EHDR.EVTDAT END, '9999-12-31') AS EVENT_DT, COALESCE(CASE WHEN TRIM( EHDR.EVTID) = '' THEN NULL ELSE EHDR.EVTID END, 'n/a') AS EXT_EVENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EVTTIM) = '' THEN NULL ELSE EHDR.EVTTIM END, 'n/a') AS EVENT_TM, COALESCE(CASE WHEN EHDR.EVTTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS EVENT_UTC_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTZON) = '' THEN NULL ELSE EHDR.EVTZON END, 'n/a') AS TIME_STAMP_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.EVT_GUID) = '' THEN NULL ELSE EHDR.EVT_GUID END, 'n/a') AS GLOBALLY_UNIQUE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCCOD) = '' THEN NULL ELSE EHDR.EXT_LOCCOD END, 'n/a') AS EXTERNAL_LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID1) = '' THEN NULL ELSE EHDR.EXT_LOCID1 END, 'n/a') AS EXT_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID2) = '' THEN NULL ELSE EHDR.EXT_LOCID2 END, 'n/a') AS EXT_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPCOD) = '' THEN NULL ELSE EHDR.EXT_REPCOD END, 'n/a') AS EXTERNAL_PARTNER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPID) = '' THEN NULL ELSE EHDR.EXT_REPID END, 'n/a') AS EXTERNAL_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_ID) = '' THEN NULL ELSE EHDR.EXT_TABLE_ID END, 'n/a') AS EXTENSION_TABLE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_NAME) = '' THEN NULL ELSE EHDR.EXT_TABLE_NAME END, 'n/a') AS EXTENSION_TABLE_NM, COALESCE(CASE WHEN TRIM( EHDR.IDOCID) = '' THEN NULL ELSE EHDR.IDOCID END, 'n/a') AS IDOC_NBR, COALESCE(CASE WHEN TRIM( EHDR.INT_EV_COD) = '' THEN NULL ELSE EHDR.INT_EV_COD END, 'n/a') AS INTERNAL_EVENT_CD, COALESCE(CASE WHEN TRIM( EHDR.INT_SR_CODE) = '' THEN NULL ELSE EHDR.INT_SR_CODE END, 'n/a') AS EVENT_REASON_INTERNAL_CD, COALESCE(CASE WHEN TRIM( EHDR.INVALID_DATA) = '' THEN NULL ELSE EHDR.INVALID_DATA END, 'n/a') AS INVALID_DATA, COALESCE(CASE WHEN TRIM( EHDR.LOCCOD) = '' THEN NULL ELSE EHDR.LOCCOD END, 'n/a') AS LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.LOCID1) = '' THEN NULL ELSE EHDR.LOCID1 END, 'n/a') AS LOCATION_CD_ID_1, COALESCE(CASE WHEN TRIM( EHDR.LOCID2) = '' THEN NULL ELSE EHDR.LOCID2 END, 'n/a') AS LOCATION_CD_ID_2, COALESCE(CASE WHEN TRIM( EHDR.LOCNAM) = '' THEN NULL ELSE EHDR.LOCNAM END, 'n/a') AS LOCATION, COALESCE(CASE WHEN TRIM( EHDR.LOCZON) = '' THEN NULL ELSE EHDR.LOCZON END, 'n/a') AS VALID_LOC_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.LODSTS) = '' THEN NULL ELSE EHDR.LODSTS END, 'n/a') AS LOADING_STATUS, COALESCE(CASE WHEN TRIM( EHDR.MSGMOD) = '' THEN NULL ELSE EHDR.MSGMOD END, 'n/a') AS MSG_CREATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSGNUM) = '' THEN NULL ELSE EHDR.MSGNUM END, 'n/a') AS SENDER_EVT_MSG_NBR, COALESCE(CASE WHEN TRIM( EHDR.MSGSRCTYP) = '' THEN NULL ELSE EHDR.MSGSRCTYP END, 'n/a') AS EVT_MSG_SOURCE_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSG_DELETED) = '' THEN NULL ELSE EHDR.MSG_DELETED END, 'n/a') AS MESSAGE_DELETED, COALESCE(CASE WHEN TRIM( EHDR.MSG_NOT_SENT) = '' THEN NULL ELSE EHDR.MSG_NOT_SENT END, 'n/a') AS EVT_MSG_BUFFERED, COALESCE(CASE WHEN TRIM( EHDR.MULTIPLE_TRK_IDS) = '' THEN NULL ELSE EHDR.MULTIPLE_TRK_IDS END, 'n/a') AS MULTIPL_TRK_ID, COALESCE(CASE WHEN TRIM( EHDR.PHYSND) = '' THEN NULL ELSE EHDR.PHYSND END, 'n/a') AS EM_SENDER_LOG_SYS, COALESCE(CASE WHEN TRIM( EHDR.PHYSTP) = '' THEN NULL ELSE EHDR.PHYSTP END, 'n/a') AS PHYSICAL_SENDER_TYP, COALESCE(CASE WHEN TRIM( EHDR.POSTL_COD1) = '' THEN NULL ELSE EHDR.POSTL_COD1 END, 'n/a') AS POSTAL_CD, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS PROC_TS, COALESCE(CASE WHEN TRIM( EHDR.PROCESS_INACTIVE) = '' THEN NULL ELSE EHDR.PROCESS_INACTIVE END, 'n/a') AS PROCEVT_MSG_INACT_EHDR, COALESCE(CASE WHEN TRIM( EHDR.PRODDS) = '' THEN NULL ELSE EHDR.PRODDS END, 'n/a') AS PRODUCT_DESCRIPTION, COALESCE(CASE WHEN TRIM( EHDR.PRODDT) = '' THEN NULL ELSE EHDR.PRODDT END, 'n/a') AS PRODUCT_DESC, COALESCE(CASE WHEN TRIM( EHDR.RCVCOD) = '' THEN NULL ELSE EHDR.RCVCOD END, 'n/a') AS RECIPIENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.RCVID) = '' THEN NULL ELSE EHDR.RCVID END, 'n/a') AS RECIPIENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.RCVNAM) = '' THEN NULL ELSE EHDR.RCVNAM END, 'n/a') AS RECIPIENT, COALESCE(CASE WHEN TRIM( EHDR.REGION) = '' THEN NULL ELSE EHDR.REGION END, 'n/a') AS REGION_STATE, COALESCE(CASE WHEN EHDR.RELTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS REPORTING_TS, COALESCE(CASE WHEN TRIM( EHDR.REPCOD) = '' THEN NULL ELSE EHDR.REPCOD END, 'n/a') AS REP_PART_CD_SET, COALESCE(CASE WHEN EHDR.REPDAT = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31') AS EVT_MSG_TRANS_DT, COALESCE(CASE WHEN TRIM( EHDR.REPID) = '' THEN NULL ELSE EHDR.REPID END, 'n/a') AS REP_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.REPM) = '' THEN NULL ELSE EHDR.REPM END, 'n/a') AS REP_PARTNER_NAME, COALESCE(CASE WHEN TRIM( EHDR.REPTIM) = '' THEN NULL ELSE EHDR.REPTIM END, 'n/a') AS EVT_MSG_TRANS_TM, COALESCE(CASE WHEN EHDR.REPTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS TRANSMISSION_TS, COALESCE(CASE WHEN TRIM( EHDR.REPZON) = '' THEN NULL ELSE EHDR.REPZON END, 'n/a') AS EVT_MSG_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.SAVE_MODE) = '' THEN NULL ELSE EHDR.SAVE_MODE END, 'n/a') AS EVT_MSG_SAVE_MODE, COALESCE(CASE WHEN TRIM( EHDR.SNDCOD) = '' THEN NULL ELSE EHDR.SNDCOD END, 'n/a') AS SENDER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SNDID) = '' THEN NULL ELSE EHDR.SNDID END, 'n/a') AS SENDER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SNDNAM) = '' THEN NULL ELSE EHDR.SNDNAM END, 'n/a') AS SENDER_NAME, COALESCE(CASE WHEN TRIM( EHDR.SRCCOD) = '' THEN NULL ELSE EHDR.SRCCOD END, 'n/a') AS EV_REASON_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SRCID) = '' THEN NULL ELSE EHDR.SRCID END, 'n/a') AS EV_REASON_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SRCTX) = '' THEN NULL ELSE EHDR.SRCTX END, 'n/a') AS STATUS_REASON_TXT, COALESCE(CASE WHEN TRIM( EHDR.TIPCOD) = '' THEN NULL ELSE EHDR.TIPCOD END, 'n/a') AS TR_ID_PROVIDER_CS, COALESCE(CASE WHEN TRIM( EHDR.TIPID) = '' THEN NULL ELSE EHDR.TIPID END, 'n/a') AS PROV_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.TIPNAM) = '' THEN NULL ELSE EHDR.TIPNAM END, 'n/a') AS TR_ID_PROV_NAME, COALESCE(CASE WHEN TRIM( EHDR.TRXCOD) = '' THEN NULL ELSE EHDR.TRXCOD END, 'n/a') AS TRACKING_ID_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.TRXID) = '' THEN NULL ELSE EHDR.TRXID END, 'n/a') AS TRACKING_ID, COALESCE(CASE WHEN TRIM( EHDR.USERNAME) = '' THEN NULL ELSE EHDR.USERNAME END, 'n/a') AS USER_NAME, COALESCE(CASE WHEN EHDR.VERSION = '' THEN NULL ELSE EHDR.VERSION END, 0) AS SAP_EM_VERSION, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') AS PROC_DT
FROM SAP_STAGE0.SAPTRX_EVM_HDR AS EHDR
WHERE COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') >= DATEADD('day', 90, CURRENT_DATE));
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_EVENTS
(SELECT COALESCE(CASE WHEN TRIM( EHDR.BATCH_GUID) = '' THEN NULL ELSE EHDR.BATCH_GUID END, 'n/a') AS BATCH_GUID, COALESCE(CASE WHEN TRIM( EHDR.CITY1) = '' THEN NULL ELSE EHDR.CITY1 END, 'n/a') AS TOWN_OR_CITY, COALESCE(CASE WHEN EHDR.CLIENT = '' THEN NULL ELSE EHDR.CLIENT END, 0) AS CLIENT, COALESCE(CASE WHEN TRIM( EHDR.COUNTRY1) = '' THEN NULL ELSE EHDR.COUNTRY1 END, 'n/a') AS COUNTRY_INDICATOR, COALESCE(CASE WHEN TRIM( EHDR.DATACS) = '' THEN NULL ELSE EHDR.DATACS END, 'n/a') AS DATA_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.DATAID) = '' THEN NULL ELSE EHDR.DATAID END, 'n/a') AS DATA_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.DCNFTP) = '' THEN NULL ELSE EHDR.DCNFTP END, 'n/a') AS CONFIRMATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.ELCCOD) = '' THEN NULL ELSE EHDR.ELCCOD END, 'n/a') AS ESTIMATE_DATE_LOC_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.ELCID1) = '' THEN NULL ELSE EHDR.ELCID1 END, 'n/a') AS ESTIMATION_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.ELCID2) = '' THEN NULL ELSE EHDR.ELCID2 END, 'n/a') AS ESTIMATE_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.ESTQUL) = '' THEN NULL ELSE EHDR.ESTQUL END, 'n/a') AS EST_TM_QUALIFIER, COALESCE(CASE WHEN EHDR.ETXTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS ESTIMATED_TM_UTC_TS, COALESCE(CASE WHEN EHDR.EVLTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS LOCAL_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTCOD) = '' THEN NULL ELSE EHDR.EVTCOD END, 'n/a') AS EXT_EVENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EVTDAT) = 0 THEN NULL ELSE EHDR.EVTDAT END, '9999-12-31') AS EVENT_DT, COALESCE(CASE WHEN TRIM( EHDR.EVTID) = '' THEN NULL ELSE EHDR.EVTID END, 'n/a') AS EXT_EVENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EVTTIM) = '' THEN NULL ELSE EHDR.EVTTIM END, 'n/a') AS EVENT_TM, COALESCE(CASE WHEN EHDR.EVTTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS EVENT_UTC_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTZON) = '' THEN NULL ELSE EHDR.EVTZON END, 'n/a') AS TIME_STAMP_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.EVT_GUID) = '' THEN NULL ELSE EHDR.EVT_GUID END, 'n/a') AS GLOBALLY_UNIQUE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCCOD) = '' THEN NULL ELSE EHDR.EXT_LOCCOD END, 'n/a') AS EXTERNAL_LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID1) = '' THEN NULL ELSE EHDR.EXT_LOCID1 END, 'n/a') AS EXT_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID2) = '' THEN NULL ELSE EHDR.EXT_LOCID2 END, 'n/a') AS EXT_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPCOD) = '' THEN NULL ELSE EHDR.EXT_REPCOD END, 'n/a') AS EXTERNAL_PARTNER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPID) = '' THEN NULL ELSE EHDR.EXT_REPID END, 'n/a') AS EXTERNAL_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_ID) = '' THEN NULL ELSE EHDR.EXT_TABLE_ID END, 'n/a') AS EXTENSION_TABLE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_NAME) = '' THEN NULL ELSE EHDR.EXT_TABLE_NAME END, 'n/a') AS EXTENSION_TABLE_NM, COALESCE(CASE WHEN TRIM( EHDR.IDOCID) = '' THEN NULL ELSE EHDR.IDOCID END, 'n/a') AS IDOC_NBR, COALESCE(CASE WHEN TRIM( EHDR.INT_EV_COD) = '' THEN NULL ELSE EHDR.INT_EV_COD END, 'n/a') AS INTERNAL_EVENT_CD, COALESCE(CASE WHEN TRIM( EHDR.INT_SR_CODE) = '' THEN NULL ELSE EHDR.INT_SR_CODE END, 'n/a') AS EVENT_REASON_INTERNAL_CD, COALESCE(CASE WHEN TRIM( EHDR.INVALID_DATA) = '' THEN NULL ELSE EHDR.INVALID_DATA END, 'n/a') AS INVALID_DATA, COALESCE(CASE WHEN TRIM( EHDR.LOCCOD) = '' THEN NULL ELSE EHDR.LOCCOD END, 'n/a') AS LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.LOCID1) = '' THEN NULL ELSE EHDR.LOCID1 END, 'n/a') AS LOCATION_CD_ID_1, COALESCE(CASE WHEN TRIM( EHDR.LOCID2) = '' THEN NULL ELSE EHDR.LOCID2 END, 'n/a') AS LOCATION_CD_ID_2, COALESCE(CASE WHEN TRIM( EHDR.LOCNAM) = '' THEN NULL ELSE EHDR.LOCNAM END, 'n/a') AS LOCATION, COALESCE(CASE WHEN TRIM( EHDR.LOCZON) = '' THEN NULL ELSE EHDR.LOCZON END, 'n/a') AS VALID_LOC_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.LODSTS) = '' THEN NULL ELSE EHDR.LODSTS END, 'n/a') AS LOADING_STATUS, COALESCE(CASE WHEN TRIM( EHDR.MSGMOD) = '' THEN NULL ELSE EHDR.MSGMOD END, 'n/a') AS MSG_CREATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSGNUM) = '' THEN NULL ELSE EHDR.MSGNUM END, 'n/a') AS SENDER_EVT_MSG_NBR, COALESCE(CASE WHEN TRIM( EHDR.MSGSRCTYP) = '' THEN NULL ELSE EHDR.MSGSRCTYP END, 'n/a') AS EVT_MSG_SOURCE_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSG_DELETED) = '' THEN NULL ELSE EHDR.MSG_DELETED END, 'n/a') AS MESSAGE_DELETED, COALESCE(CASE WHEN TRIM( EHDR.MSG_NOT_SENT) = '' THEN NULL ELSE EHDR.MSG_NOT_SENT END, 'n/a') AS EVT_MSG_BUFFERED, COALESCE(CASE WHEN TRIM( EHDR.MULTIPLE_TRK_IDS) = '' THEN NULL ELSE EHDR.MULTIPLE_TRK_IDS END, 'n/a') AS MULTIPL_TRK_ID, COALESCE(CASE WHEN TRIM( EHDR.PHYSND) = '' THEN NULL ELSE EHDR.PHYSND END, 'n/a') AS EM_SENDER_LOG_SYS, COALESCE(CASE WHEN TRIM( EHDR.PHYSTP) = '' THEN NULL ELSE EHDR.PHYSTP END, 'n/a') AS PHYSICAL_SENDER_TYP, COALESCE(CASE WHEN TRIM( EHDR.POSTL_COD1) = '' THEN NULL ELSE EHDR.POSTL_COD1 END, 'n/a') AS POSTAL_CD, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS PROC_TS, COALESCE(CASE WHEN TRIM( EHDR.PROCESS_INACTIVE) = '' THEN NULL ELSE EHDR.PROCESS_INACTIVE END, 'n/a') AS PROCEVT_MSG_INACT_EHDR, COALESCE(CASE WHEN TRIM( EHDR.PRODDS) = '' THEN NULL ELSE EHDR.PRODDS END, 'n/a') AS PRODUCT_DESCRIPTION, COALESCE(CASE WHEN TRIM( EHDR.PRODDT) = '' THEN NULL ELSE EHDR.PRODDT END, 'n/a') AS PRODUCT_DESC, COALESCE(CASE WHEN TRIM( EHDR.RCVCOD) = '' THEN NULL ELSE EHDR.RCVCOD END, 'n/a') AS RECIPIENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.RCVID) = '' THEN NULL ELSE EHDR.RCVID END, 'n/a') AS RECIPIENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.RCVNAM) = '' THEN NULL ELSE EHDR.RCVNAM END, 'n/a') AS RECIPIENT, COALESCE(CASE WHEN TRIM( EHDR.REGION) = '' THEN NULL ELSE EHDR.REGION END, 'n/a') AS REGION_STATE, COALESCE(CASE WHEN EHDR.RELTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS REPORTING_TS, COALESCE(CASE WHEN TRIM( EHDR.REPCOD) = '' THEN NULL ELSE EHDR.REPCOD END, 'n/a') AS REP_PART_CD_SET, COALESCE(CASE WHEN EHDR.REPDAT = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31') AS EVT_MSG_TRANS_DT, COALESCE(CASE WHEN TRIM( EHDR.REPID) = '' THEN NULL ELSE EHDR.REPID END, 'n/a') AS REP_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.REPM) = '' THEN NULL ELSE EHDR.REPM END, 'n/a') AS REP_PARTNER_NAME, COALESCE(CASE WHEN TRIM( EHDR.REPTIM) = '' THEN NULL ELSE EHDR.REPTIM END, 'n/a') AS EVT_MSG_TRANS_TM, COALESCE(CASE WHEN EHDR.REPTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS TRANSMISSION_TS, COALESCE(CASE WHEN TRIM( EHDR.REPZON) = '' THEN NULL ELSE EHDR.REPZON END, 'n/a') AS EVT_MSG_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.SAVE_MODE) = '' THEN NULL ELSE EHDR.SAVE_MODE END, 'n/a') AS EVT_MSG_SAVE_MODE, COALESCE(CASE WHEN TRIM( EHDR.SNDCOD) = '' THEN NULL ELSE EHDR.SNDCOD END, 'n/a') AS SENDER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SNDID) = '' THEN NULL ELSE EHDR.SNDID END, 'n/a') AS SENDER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SNDNAM) = '' THEN NULL ELSE EHDR.SNDNAM END, 'n/a') AS SENDER_NAME, COALESCE(CASE WHEN TRIM( EHDR.SRCCOD) = '' THEN NULL ELSE EHDR.SRCCOD END, 'n/a') AS EV_REASON_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SRCID) = '' THEN NULL ELSE EHDR.SRCID END, 'n/a') AS EV_REASON_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SRCTX) = '' THEN NULL ELSE EHDR.SRCTX END, 'n/a') AS STATUS_REASON_TXT, COALESCE(CASE WHEN TRIM( EHDR.TIPCOD) = '' THEN NULL ELSE EHDR.TIPCOD END, 'n/a') AS TR_ID_PROVIDER_CS, COALESCE(CASE WHEN TRIM( EHDR.TIPID) = '' THEN NULL ELSE EHDR.TIPID END, 'n/a') AS PROV_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.TIPNAM) = '' THEN NULL ELSE EHDR.TIPNAM END, 'n/a') AS TR_ID_PROV_NAME, COALESCE(CASE WHEN TRIM( EHDR.TRXCOD) = '' THEN NULL ELSE EHDR.TRXCOD END, 'n/a') AS TRACKING_ID_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.TRXID) = '' THEN NULL ELSE EHDR.TRXID END, 'n/a') AS TRACKING_ID, COALESCE(CASE WHEN TRIM( EHDR.USERNAME) = '' THEN NULL ELSE EHDR.USERNAME END, 'n/a') AS USER_NAME, COALESCE(CASE WHEN EHDR.VERSION = '' THEN NULL ELSE EHDR.VERSION END, 0) AS SAP_EM_VERSION, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') AS PROC_DT
FROM SAP_STAGE0.SAPTRX_EVM_HDR AS EHDR
WHERE COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') >= DATEADD('day', 90, CURRENT_DATE));
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_EVENTS
(SELECT COALESCE(CASE WHEN TRIM( EHDR.BATCH_GUID) = '' THEN NULL ELSE EHDR.BATCH_GUID END, 'n/a') AS BATCH_GUID, COALESCE(CASE WHEN TRIM( EHDR.CITY1) = '' THEN NULL ELSE EHDR.CITY1 END, 'n/a') AS TOWN_OR_CITY, COALESCE(CASE WHEN EHDR.CLIENT = '' THEN NULL ELSE EHDR.CLIENT END, 0) AS CLIENT, COALESCE(CASE WHEN TRIM( EHDR.COUNTRY1) = '' THEN NULL ELSE EHDR.COUNTRY1 END, 'n/a') AS COUNTRY_INDICATOR, COALESCE(CASE WHEN TRIM( EHDR.DATACS) = '' THEN NULL ELSE EHDR.DATACS END, 'n/a') AS DATA_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.DATAID) = '' THEN NULL ELSE EHDR.DATAID END, 'n/a') AS DATA_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.DCNFTP) = '' THEN NULL ELSE EHDR.DCNFTP END, 'n/a') AS CONFIRMATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.ELCCOD) = '' THEN NULL ELSE EHDR.ELCCOD END, 'n/a') AS ESTIMATE_DATE_LOC_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.ELCID1) = '' THEN NULL ELSE EHDR.ELCID1 END, 'n/a') AS ESTIMATION_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.ELCID2) = '' THEN NULL ELSE EHDR.ELCID2 END, 'n/a') AS ESTIMATE_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.ESTQUL) = '' THEN NULL ELSE EHDR.ESTQUL END, 'n/a') AS EST_TM_QUALIFIER, COALESCE(CASE WHEN EHDR.ETXTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS ESTIMATED_TM_UTC_TS, COALESCE(CASE WHEN EHDR.EVLTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS LOCAL_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTCOD) = '' THEN NULL ELSE EHDR.EVTCOD END, 'n/a') AS EXT_EVENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EVTDAT) = 0 THEN NULL ELSE EHDR.EVTDAT END, '9999-12-31') AS EVENT_DT, COALESCE(CASE WHEN TRIM( EHDR.EVTID) = '' THEN NULL ELSE EHDR.EVTID END, 'n/a') AS EXT_EVENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EVTTIM) = '' THEN NULL ELSE EHDR.EVTTIM END, 'n/a') AS EVENT_TM, COALESCE(CASE WHEN EHDR.EVTTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS EVENT_UTC_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTZON) = '' THEN NULL ELSE EHDR.EVTZON END, 'n/a') AS TIME_STAMP_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.EVT_GUID) = '' THEN NULL ELSE EHDR.EVT_GUID END, 'n/a') AS GLOBALLY_UNIQUE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCCOD) = '' THEN NULL ELSE EHDR.EXT_LOCCOD END, 'n/a') AS EXTERNAL_LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID1) = '' THEN NULL ELSE EHDR.EXT_LOCID1 END, 'n/a') AS EXT_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID2) = '' THEN NULL ELSE EHDR.EXT_LOCID2 END, 'n/a') AS EXT_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPCOD) = '' THEN NULL ELSE EHDR.EXT_REPCOD END, 'n/a') AS EXTERNAL_PARTNER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPID) = '' THEN NULL ELSE EHDR.EXT_REPID END, 'n/a') AS EXTERNAL_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_ID) = '' THEN NULL ELSE EHDR.EXT_TABLE_ID END, 'n/a') AS EXTENSION_TABLE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_NAME) = '' THEN NULL ELSE EHDR.EXT_TABLE_NAME END, 'n/a') AS EXTENSION_TABLE_NM, COALESCE(CASE WHEN TRIM( EHDR.IDOCID) = '' THEN NULL ELSE EHDR.IDOCID END, 'n/a') AS IDOC_NBR, COALESCE(CASE WHEN TRIM( EHDR.INT_EV_COD) = '' THEN NULL ELSE EHDR.INT_EV_COD END, 'n/a') AS INTERNAL_EVENT_CD, COALESCE(CASE WHEN TRIM( EHDR.INT_SR_CODE) = '' THEN NULL ELSE EHDR.INT_SR_CODE END, 'n/a') AS EVENT_REASON_INTERNAL_CD, COALESCE(CASE WHEN TRIM( EHDR.INVALID_DATA) = '' THEN NULL ELSE EHDR.INVALID_DATA END, 'n/a') AS INVALID_DATA, COALESCE(CASE WHEN TRIM( EHDR.LOCCOD) = '' THEN NULL ELSE EHDR.LOCCOD END, 'n/a') AS LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.LOCID1) = '' THEN NULL ELSE EHDR.LOCID1 END, 'n/a') AS LOCATION_CD_ID_1, COALESCE(CASE WHEN TRIM( EHDR.LOCID2) = '' THEN NULL ELSE EHDR.LOCID2 END, 'n/a') AS LOCATION_CD_ID_2, COALESCE(CASE WHEN TRIM( EHDR.LOCNAM) = '' THEN NULL ELSE EHDR.LOCNAM END, 'n/a') AS LOCATION, COALESCE(CASE WHEN TRIM( EHDR.LOCZON) = '' THEN NULL ELSE EHDR.LOCZON END, 'n/a') AS VALID_LOC_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.LODSTS) = '' THEN NULL ELSE EHDR.LODSTS END, 'n/a') AS LOADING_STATUS, COALESCE(CASE WHEN TRIM( EHDR.MSGMOD) = '' THEN NULL ELSE EHDR.MSGMOD END, 'n/a') AS MSG_CREATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSGNUM) = '' THEN NULL ELSE EHDR.MSGNUM END, 'n/a') AS SENDER_EVT_MSG_NBR, COALESCE(CASE WHEN TRIM( EHDR.MSGSRCTYP) = '' THEN NULL ELSE EHDR.MSGSRCTYP END, 'n/a') AS EVT_MSG_SOURCE_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSG_DELETED) = '' THEN NULL ELSE EHDR.MSG_DELETED END, 'n/a') AS MESSAGE_DELETED, COALESCE(CASE WHEN TRIM( EHDR.MSG_NOT_SENT) = '' THEN NULL ELSE EHDR.MSG_NOT_SENT END, 'n/a') AS EVT_MSG_BUFFERED, COALESCE(CASE WHEN TRIM( EHDR.MULTIPLE_TRK_IDS) = '' THEN NULL ELSE EHDR.MULTIPLE_TRK_IDS END, 'n/a') AS MULTIPL_TRK_ID, COALESCE(CASE WHEN TRIM( EHDR.PHYSND) = '' THEN NULL ELSE EHDR.PHYSND END, 'n/a') AS EM_SENDER_LOG_SYS, COALESCE(CASE WHEN TRIM( EHDR.PHYSTP) = '' THEN NULL ELSE EHDR.PHYSTP END, 'n/a') AS PHYSICAL_SENDER_TYP, COALESCE(CASE WHEN TRIM( EHDR.POSTL_COD1) = '' THEN NULL ELSE EHDR.POSTL_COD1 END, 'n/a') AS POSTAL_CD, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS PROC_TS, COALESCE(CASE WHEN TRIM( EHDR.PROCESS_INACTIVE) = '' THEN NULL ELSE EHDR.PROCESS_INACTIVE END, 'n/a') AS PROCEVT_MSG_INACT_EHDR, COALESCE(CASE WHEN TRIM( EHDR.PRODDS) = '' THEN NULL ELSE EHDR.PRODDS END, 'n/a') AS PRODUCT_DESCRIPTION, COALESCE(CASE WHEN TRIM( EHDR.PRODDT) = '' THEN NULL ELSE EHDR.PRODDT END, 'n/a') AS PRODUCT_DESC, COALESCE(CASE WHEN TRIM( EHDR.RCVCOD) = '' THEN NULL ELSE EHDR.RCVCOD END, 'n/a') AS RECIPIENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.RCVID) = '' THEN NULL ELSE EHDR.RCVID END, 'n/a') AS RECIPIENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.RCVNAM) = '' THEN NULL ELSE EHDR.RCVNAM END, 'n/a') AS RECIPIENT, COALESCE(CASE WHEN TRIM( EHDR.REGION) = '' THEN NULL ELSE EHDR.REGION END, 'n/a') AS REGION_STATE, COALESCE(CASE WHEN EHDR.RELTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS REPORTING_TS, COALESCE(CASE WHEN TRIM( EHDR.REPCOD) = '' THEN NULL ELSE EHDR.REPCOD END, 'n/a') AS REP_PART_CD_SET, COALESCE(CASE WHEN EHDR.REPDAT = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31') AS EVT_MSG_TRANS_DT, COALESCE(CASE WHEN TRIM( EHDR.REPID) = '' THEN NULL ELSE EHDR.REPID END, 'n/a') AS REP_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.REPM) = '' THEN NULL ELSE EHDR.REPM END, 'n/a') AS REP_PARTNER_NAME, COALESCE(CASE WHEN TRIM( EHDR.REPTIM) = '' THEN NULL ELSE EHDR.REPTIM END, 'n/a') AS EVT_MSG_TRANS_TM, COALESCE(CASE WHEN EHDR.REPTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS TRANSMISSION_TS, COALESCE(CASE WHEN TRIM( EHDR.REPZON) = '' THEN NULL ELSE EHDR.REPZON END, 'n/a') AS EVT_MSG_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.SAVE_MODE) = '' THEN NULL ELSE EHDR.SAVE_MODE END, 'n/a') AS EVT_MSG_SAVE_MODE, COALESCE(CASE WHEN TRIM( EHDR.SNDCOD) = '' THEN NULL ELSE EHDR.SNDCOD END, 'n/a') AS SENDER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SNDID) = '' THEN NULL ELSE EHDR.SNDID END, 'n/a') AS SENDER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SNDNAM) = '' THEN NULL ELSE EHDR.SNDNAM END, 'n/a') AS SENDER_NAME, COALESCE(CASE WHEN TRIM( EHDR.SRCCOD) = '' THEN NULL ELSE EHDR.SRCCOD END, 'n/a') AS EV_REASON_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SRCID) = '' THEN NULL ELSE EHDR.SRCID END, 'n/a') AS EV_REASON_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SRCTX) = '' THEN NULL ELSE EHDR.SRCTX END, 'n/a') AS STATUS_REASON_TXT, COALESCE(CASE WHEN TRIM( EHDR.TIPCOD) = '' THEN NULL ELSE EHDR.TIPCOD END, 'n/a') AS TR_ID_PROVIDER_CS, COALESCE(CASE WHEN TRIM( EHDR.TIPID) = '' THEN NULL ELSE EHDR.TIPID END, 'n/a') AS PROV_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.TIPNAM) = '' THEN NULL ELSE EHDR.TIPNAM END, 'n/a') AS TR_ID_PROV_NAME, COALESCE(CASE WHEN TRIM( EHDR.TRXCOD) = '' THEN NULL ELSE EHDR.TRXCOD END, 'n/a') AS TRACKING_ID_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.TRXID) = '' THEN NULL ELSE EHDR.TRXID END, 'n/a') AS TRACKING_ID, COALESCE(CASE WHEN TRIM( EHDR.USERNAME) = '' THEN NULL ELSE EHDR.USERNAME END, 'n/a') AS USER_NAME, COALESCE(CASE WHEN EHDR.VERSION = '' THEN NULL ELSE EHDR.VERSION END, 0) AS SAP_EM_VERSION, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') AS PROC_DT
FROM SAP_STAGE0.SAPTRX_EVM_HDR AS EHDR
WHERE COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') >= DATEADD('day', 90, CURRENT_DATE));
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_EVENTS
(SELECT COALESCE(CASE WHEN TRIM( EHDR.BATCH_GUID) = '' THEN NULL ELSE EHDR.BATCH_GUID END, 'n/a') AS BATCH_GUID, COALESCE(CASE WHEN TRIM( EHDR.CITY1) = '' THEN NULL ELSE EHDR.CITY1 END, 'n/a') AS TOWN_OR_CITY, COALESCE(CASE WHEN EHDR.CLIENT = '' THEN NULL ELSE EHDR.CLIENT END, 0) AS CLIENT, COALESCE(CASE WHEN TRIM( EHDR.COUNTRY1) = '' THEN NULL ELSE EHDR.COUNTRY1 END, 'n/a') AS COUNTRY_INDICATOR, COALESCE(CASE WHEN TRIM( EHDR.DATACS) = '' THEN NULL ELSE EHDR.DATACS END, 'n/a') AS DATA_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.DATAID) = '' THEN NULL ELSE EHDR.DATAID END, 'n/a') AS DATA_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.DCNFTP) = '' THEN NULL ELSE EHDR.DCNFTP END, 'n/a') AS CONFIRMATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.ELCCOD) = '' THEN NULL ELSE EHDR.ELCCOD END, 'n/a') AS ESTIMATE_DATE_LOC_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.ELCID1) = '' THEN NULL ELSE EHDR.ELCID1 END, 'n/a') AS ESTIMATION_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.ELCID2) = '' THEN NULL ELSE EHDR.ELCID2 END, 'n/a') AS ESTIMATE_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.ESTQUL) = '' THEN NULL ELSE EHDR.ESTQUL END, 'n/a') AS EST_TM_QUALIFIER, COALESCE(CASE WHEN EHDR.ETXTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.ETXTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS ESTIMATED_TM_UTC_TS, COALESCE(CASE WHEN EHDR.EVLTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVLTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS LOCAL_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTCOD) = '' THEN NULL ELSE EHDR.EVTCOD END, 'n/a') AS EXT_EVENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EVTDAT) = 0 THEN NULL ELSE EHDR.EVTDAT END, '9999-12-31') AS EVENT_DT, COALESCE(CASE WHEN TRIM( EHDR.EVTID) = '' THEN NULL ELSE EHDR.EVTID END, 'n/a') AS EXT_EVENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EVTTIM) = '' THEN NULL ELSE EHDR.EVTTIM END, 'n/a') AS EVENT_TM, COALESCE(CASE WHEN EHDR.EVTTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.EVTTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS EVENT_UTC_TS, COALESCE(CASE WHEN TRIM( EHDR.EVTZON) = '' THEN NULL ELSE EHDR.EVTZON END, 'n/a') AS TIME_STAMP_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.EVT_GUID) = '' THEN NULL ELSE EHDR.EVT_GUID END, 'n/a') AS GLOBALLY_UNIQUE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCCOD) = '' THEN NULL ELSE EHDR.EXT_LOCCOD END, 'n/a') AS EXTERNAL_LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID1) = '' THEN NULL ELSE EHDR.EXT_LOCID1 END, 'n/a') AS EXT_LOC_ID1, COALESCE(CASE WHEN TRIM( EHDR.EXT_LOCID2) = '' THEN NULL ELSE EHDR.EXT_LOCID2 END, 'n/a') AS EXT_LOC_ID2, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPCOD) = '' THEN NULL ELSE EHDR.EXT_REPCOD END, 'n/a') AS EXTERNAL_PARTNER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.EXT_REPID) = '' THEN NULL ELSE EHDR.EXT_REPID END, 'n/a') AS EXTERNAL_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_ID) = '' THEN NULL ELSE EHDR.EXT_TABLE_ID END, 'n/a') AS EXTENSION_TABLE_ID, COALESCE(CASE WHEN TRIM( EHDR.EXT_TABLE_NAME) = '' THEN NULL ELSE EHDR.EXT_TABLE_NAME END, 'n/a') AS EXTENSION_TABLE_NM, COALESCE(CASE WHEN TRIM( EHDR.IDOCID) = '' THEN NULL ELSE EHDR.IDOCID END, 'n/a') AS IDOC_NBR, COALESCE(CASE WHEN TRIM( EHDR.INT_EV_COD) = '' THEN NULL ELSE EHDR.INT_EV_COD END, 'n/a') AS INTERNAL_EVENT_CD, COALESCE(CASE WHEN TRIM( EHDR.INT_SR_CODE) = '' THEN NULL ELSE EHDR.INT_SR_CODE END, 'n/a') AS EVENT_REASON_INTERNAL_CD, COALESCE(CASE WHEN TRIM( EHDR.INVALID_DATA) = '' THEN NULL ELSE EHDR.INVALID_DATA END, 'n/a') AS INVALID_DATA, COALESCE(CASE WHEN TRIM( EHDR.LOCCOD) = '' THEN NULL ELSE EHDR.LOCCOD END, 'n/a') AS LOCATION_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.LOCID1) = '' THEN NULL ELSE EHDR.LOCID1 END, 'n/a') AS LOCATION_CD_ID_1, COALESCE(CASE WHEN TRIM( EHDR.LOCID2) = '' THEN NULL ELSE EHDR.LOCID2 END, 'n/a') AS LOCATION_CD_ID_2, COALESCE(CASE WHEN TRIM( EHDR.LOCNAM) = '' THEN NULL ELSE EHDR.LOCNAM END, 'n/a') AS LOCATION, COALESCE(CASE WHEN TRIM( EHDR.LOCZON) = '' THEN NULL ELSE EHDR.LOCZON END, 'n/a') AS VALID_LOC_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.LODSTS) = '' THEN NULL ELSE EHDR.LODSTS END, 'n/a') AS LOADING_STATUS, COALESCE(CASE WHEN TRIM( EHDR.MSGMOD) = '' THEN NULL ELSE EHDR.MSGMOD END, 'n/a') AS MSG_CREATION_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSGNUM) = '' THEN NULL ELSE EHDR.MSGNUM END, 'n/a') AS SENDER_EVT_MSG_NBR, COALESCE(CASE WHEN TRIM( EHDR.MSGSRCTYP) = '' THEN NULL ELSE EHDR.MSGSRCTYP END, 'n/a') AS EVT_MSG_SOURCE_TYP, COALESCE(CASE WHEN TRIM( EHDR.MSG_DELETED) = '' THEN NULL ELSE EHDR.MSG_DELETED END, 'n/a') AS MESSAGE_DELETED, COALESCE(CASE WHEN TRIM( EHDR.MSG_NOT_SENT) = '' THEN NULL ELSE EHDR.MSG_NOT_SENT END, 'n/a') AS EVT_MSG_BUFFERED, COALESCE(CASE WHEN TRIM( EHDR.MULTIPLE_TRK_IDS) = '' THEN NULL ELSE EHDR.MULTIPLE_TRK_IDS END, 'n/a') AS MULTIPL_TRK_ID, COALESCE(CASE WHEN TRIM( EHDR.PHYSND) = '' THEN NULL ELSE EHDR.PHYSND END, 'n/a') AS EM_SENDER_LOG_SYS, COALESCE(CASE WHEN TRIM( EHDR.PHYSTP) = '' THEN NULL ELSE EHDR.PHYSTP END, 'n/a') AS PHYSICAL_SENDER_TYP, COALESCE(CASE WHEN TRIM( EHDR.POSTL_COD1) = '' THEN NULL ELSE EHDR.POSTL_COD1 END, 'n/a') AS POSTAL_CD, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS PROC_TS, COALESCE(CASE WHEN TRIM( EHDR.PROCESS_INACTIVE) = '' THEN NULL ELSE EHDR.PROCESS_INACTIVE END, 'n/a') AS PROCEVT_MSG_INACT_EHDR, COALESCE(CASE WHEN TRIM( EHDR.PRODDS) = '' THEN NULL ELSE EHDR.PRODDS END, 'n/a') AS PRODUCT_DESCRIPTION, COALESCE(CASE WHEN TRIM( EHDR.PRODDT) = '' THEN NULL ELSE EHDR.PRODDT END, 'n/a') AS PRODUCT_DESC, COALESCE(CASE WHEN TRIM( EHDR.RCVCOD) = '' THEN NULL ELSE EHDR.RCVCOD END, 'n/a') AS RECIPIENT_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.RCVID) = '' THEN NULL ELSE EHDR.RCVID END, 'n/a') AS RECIPIENT_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.RCVNAM) = '' THEN NULL ELSE EHDR.RCVNAM END, 'n/a') AS RECIPIENT, COALESCE(CASE WHEN TRIM( EHDR.REGION) = '' THEN NULL ELSE EHDR.REGION END, 'n/a') AS REGION_STATE, COALESCE(CASE WHEN EHDR.RELTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.RELTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS REPORTING_TS, COALESCE(CASE WHEN TRIM( EHDR.REPCOD) = '' THEN NULL ELSE EHDR.REPCOD END, 'n/a') AS REP_PART_CD_SET, COALESCE(CASE WHEN EHDR.REPDAT = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPDAT AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31') AS EVT_MSG_TRANS_DT, COALESCE(CASE WHEN TRIM( EHDR.REPID) = '' THEN NULL ELSE EHDR.REPID END, 'n/a') AS REP_PARTNER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.REPM) = '' THEN NULL ELSE EHDR.REPM END, 'n/a') AS REP_PARTNER_NAME, COALESCE(CASE WHEN TRIM( EHDR.REPTIM) = '' THEN NULL ELSE EHDR.REPTIM END, 'n/a') AS EVT_MSG_TRANS_TM, COALESCE(CASE WHEN EHDR.REPTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 7 FOR 2), ' ', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 9 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 11 FOR 2), ':', SUBSTRING(CAST(EHDR.REPTST AS BIGINT) FROM 13 FOR 2)) END, '9999-12-31 00:00:00') AS TRANSMISSION_TS, COALESCE(CASE WHEN TRIM( EHDR.REPZON) = '' THEN NULL ELSE EHDR.REPZON END, 'n/a') AS EVT_MSG_TIME_ZONE, COALESCE(CASE WHEN TRIM( EHDR.SAVE_MODE) = '' THEN NULL ELSE EHDR.SAVE_MODE END, 'n/a') AS EVT_MSG_SAVE_MODE, COALESCE(CASE WHEN TRIM( EHDR.SNDCOD) = '' THEN NULL ELSE EHDR.SNDCOD END, 'n/a') AS SENDER_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SNDID) = '' THEN NULL ELSE EHDR.SNDID END, 'n/a') AS SENDER_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SNDNAM) = '' THEN NULL ELSE EHDR.SNDNAM END, 'n/a') AS SENDER_NAME, COALESCE(CASE WHEN TRIM( EHDR.SRCCOD) = '' THEN NULL ELSE EHDR.SRCCOD END, 'n/a') AS EV_REASON_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.SRCID) = '' THEN NULL ELSE EHDR.SRCID END, 'n/a') AS EV_REASON_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.SRCTX) = '' THEN NULL ELSE EHDR.SRCTX END, 'n/a') AS STATUS_REASON_TXT, COALESCE(CASE WHEN TRIM( EHDR.TIPCOD) = '' THEN NULL ELSE EHDR.TIPCOD END, 'n/a') AS TR_ID_PROVIDER_CS, COALESCE(CASE WHEN TRIM( EHDR.TIPID) = '' THEN NULL ELSE EHDR.TIPID END, 'n/a') AS PROV_CD_ID, COALESCE(CASE WHEN TRIM( EHDR.TIPNAM) = '' THEN NULL ELSE EHDR.TIPNAM END, 'n/a') AS TR_ID_PROV_NAME, COALESCE(CASE WHEN TRIM( EHDR.TRXCOD) = '' THEN NULL ELSE EHDR.TRXCOD END, 'n/a') AS TRACKING_ID_CD_SET, COALESCE(CASE WHEN TRIM( EHDR.TRXID) = '' THEN NULL ELSE EHDR.TRXID END, 'n/a') AS TRACKING_ID, COALESCE(CASE WHEN TRIM( EHDR.USERNAME) = '' THEN NULL ELSE EHDR.USERNAME END, 'n/a') AS USER_NAME, COALESCE(CASE WHEN EHDR.VERSION = '' THEN NULL ELSE EHDR.VERSION END, 0) AS SAP_EM_VERSION, COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') AS PROC_DT
FROM SAP_STAGE0.SAPTRX_EVM_HDR AS EHDR
WHERE COALESCE(CASE WHEN EHDR.PRCTST = 0 THEN NULL ELSE CONCAT(SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 1 FOR 4), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 5 FOR 2), '-', SUBSTRING(CAST(EHDR.PRCTST AS BIGINT) FROM 7 FOR 2)) END, '9999-12-31') >= DATEADD('day', 90, CURRENT_DATE));
