! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
