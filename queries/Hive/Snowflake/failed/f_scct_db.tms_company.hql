---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
! echo completed loading into scct_db.tms_commodity_class ;
-------------------------- ---cocatenate files for target table tms_commodity_class -------------------------  set tez.job.name=stage1:tms_commodity_class:cocatenate files on tms_commodity_class;
! echo started cocatenate files;
alter table scct_db.tms_commodity_class concatenate;
! echo completed cocatenate files;
---jobname:scct-tms-hive-stg1-scct_db.tms_company -------------------------------------------------------------------------- ---target: stage1 table: scct_db.tms_company ---source: tms_stage0 table : ca2015_company ---load type: full ---back posting: no -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 05aug19 scctp4-2253 pnaayan initial version --------------------------------------------------------------------------  ------------------------- ---job related hive settings to read data from hbase -------------------------  set hive.auto.convert.join=false;
------------------------- ---loading stage0 data into hbase staging table -------------------------  set tez.job.name=staging:maprdb_company_raw :load target from ca2015_company ;
! echo started loading into scct_raw_db.maprdb_company_raw ;
insert into table scct_raw_db.maprdb_company_raw select concat(company_id,"|",to_utc_timestamp(last_updated_dttm, "est5edt")) as key ,company_id ,company_name ,company_type_id ,is_active ,is_multiple_logon_restricted ,created_source_type_id ,created_source ,created_dttm ,last_updated_source_type_id ,last_updated_source ,last_updated_dttm ,company_description ,company_url ,telephone_number ,fax_number ,address_1 ,address_2 ,city ,state_prov ,postal_code ,country_code ,billing_address_1 ,billing_address_2 ,billing_city ,billing_state_prov ,billing_postal_code ,billing_country_code ,contact_title ,contact_name ,contact_telephone_number ,contact_fax_number ,contact_email ,hibernate_version ,has_logo ,business_number ,duns_number ,company_code ,invoice_compare_method ,address_3 ,auto_create_batch_flag ,batch_ctrl_flag ,batch_role_id ,billing_address_3 ,case_lock_code_exp_rec ,case_lock_code_held ,color_mask ,color_offset ,color_septr ,color_sfx_mask ,color_sfx_offset ,color_sfx_septr ,dflt_batch_stat_code ,dsp_item_desc_flag ,lock_code_invalid ,pick_lock_code_exp_rec ,pick_lock_code_held ,proc_whse_xfer ,qual_mask ,qual_offset ,qual_septr ,recv_batch ,season_mask ,season_offset ,season_septr ,season_yr_mask ,season_yr_offset ,season_yr_septr ,sec_dim_mask ,sec_dim_offset ,sec_dim_septr ,size_desc_mask ,size_desc_offset ,size_desc_septr ,sku_mask ,sku_offset_mask ,style_mask ,style_offset ,style_septr ,style_sfx_mask ,style_sfx_offset ,style_sfx_septr ,ucc_ean_co_pfx ,parent_company_id ,is_initialized from tms_stage0.ca2015_company
------------------------- ---loading staging data into stage1 tms_company table -------------------------  set tez.job.name=stage1:tms_company :load target table from maprdb_company_raw ;
! echo started loading into scct_db.tms_company ;
insert overwrite table scct_db.tms_company select coalesce((case when trim(company_id)='' then null else trim(company_id) end),0) as company_id ,coalesce((case when trim(company_name)='' then null else trim(company_name) end),'n/a') as company_name ,coalesce((case when trim(company_type_id)='' then null else trim(company_type_id) end),0) as company_type_id ,coalesce((case when trim(is_active)='' then null else trim(is_active ) end),0) as is_active ,coalesce((case when trim(is_multiple_logon_restricted)='' then null else trim(is_multiple_logon_restricted ) end),0) as is_multiple_logon_restricted ,coalesce((case when trim(created_source_type_id)='' then null else trim(created_source_type_id) end),0) as created_source_type_id ,coalesce((case when trim(created_source)='' then null else trim(created_source) end),'n/a') as created_source ,coalesce(to_utc_timestamp(created_dttm, "est5edt"), '9999-12-31 00:00:00') as created_dttm ,coalesce((case when trim(last_updated_source_type_id)='' then null else trim(last_updated_source_type_id) end),0) as last_updated_source_type_id ,coalesce((case when trim(last_updated_source)='' then null else trim(last_updated_source) end),'n/a') as last_updated_source ,coalesce(to_utc_timestamp(last_updated_dttm, "est5edt"), '9999-12-31 00:00:00') as last_updated_dttm ,coalesce((case when trim(company_description)='' then null else trim(company_description) end),'n/a') as company_description ,coalesce((case when trim(company_url)='' then null else trim(company_url ) end),'n/a') as company_url ,coalesce((case when trim(telephone_number)='' then null else trim(telephone_number) end),'n/a') as telephone_number ,coalesce((case when trim(fax_number)='' then null else trim(fax_number) end),'n/a') as fax_number ,coalesce((case when trim(address_1)='' then null else trim(address_1) end),'n/a') as address_1 ,coalesce((case when trim(address_2)='' then null else trim(address_2) end),'n/a') as address_2 ,coalesce((case when trim(city)='' then null else trim(city) end),'n/a') as city ,coalesce((case when trim(state_prov)='' then null else trim(state_prov) end),'n/a') as state_prov ,coalesce((case when trim(postal_code)='' then null else trim(postal_code) end),'n/a') as postal_code ,coalesce((case when trim(country_code)='' then null else trim(country_code) end),'n/a') as country_code ,coalesce((case when trim(billing_address_1)='' then null else trim(billing_address_1) end),'n/a') as billing_address_1 ,coalesce((case when trim(billing_address_2)='' then null else trim(billing_address_2) end),'n/a') as billing_address_2 ,coalesce((case when trim(billing_city)='' then null else trim(billing_city) end),'n/a') as billing_city ,coalesce((case when trim(billing_state_prov)='' then null else trim(billing_state_prov) end),'n/a') as billing_state_prov ,coalesce((case when trim(billing_postal_code)='' then null else trim(billing_postal_code) end),'n/a') as billing_postal_code ,coalesce((case when trim(billing_country_code)='' then null else trim(billing_country_code) end),'n/a') as billing_country_code ,coalesce((case when trim(contact_title)='' then null else trim(contact_title) end),'n/a') as contact_title ,coalesce((case when trim(contact_name)='' then null else trim(contact_name) end),'n/a') as contact_name ,coalesce((case when trim(contact_telephone_number)='' then null else trim(contact_telephone_number) end),'n/a') as contact_telephone_number ,coalesce((case when trim(contact_fax_number)='' then null else trim(contact_fax_number) end),'n/a') as contact_fax_number ,coalesce((case when trim(contact_email)='' then null else trim(contact_email) end),'n/a') as contact_email ,coalesce((case when trim(hibernate_version)='' then null else trim(hibernate_version) end),0) as hibernate_version ,coalesce((case when trim(has_logo)='' then null else trim(has_logo) end),0) as has_logo ,coalesce((case when trim(business_number)='' then null else trim(business_number) end),'n/a') as business_number ,coalesce((case when trim(duns_number)='' then null else trim(duns_number) end),'n/a') as duns_number ,coalesce((case when trim(company_code)='' then null else trim(company_code) end),'n/a') as company_code ,coalesce((case when trim(invoice_compare_method)='' then null else trim(invoice_compare_method) end),'n/a') as invoice_compare_method ,coalesce((case when trim(address_3)='' then null else trim(address_3) end),'n/a') as address_3 ,coalesce((case when trim(auto_create_batch_flag)='' then null else trim(auto_create_batch_flag) end),'n/a') as auto_create_batch_flag ,coalesce((case when trim(batch_ctrl_flag)='' then null else trim(batch_ctrl_flag) end),'n/a') as batch_ctrl_flag ,coalesce((case when trim(batch_role_id)='' then null else trim(batch_role_id) end),'n/a') as batch_role_id ,coalesce((case when trim(billing_address_3)='' then null else trim(billing_address_3) end),'n/a') as billing_address_3 ,coalesce((case when trim(case_lock_code_exp_rec)='' then null else trim(case_lock_code_exp_rec) end),'n/a') as case_lock_code_exp_rec ,coalesce((case when trim(case_lock_code_held)='' then null else trim(case_lock_code_held) end),'n/a') as case_lock_code_held ,coalesce((case when trim(color_mask)='' then null else trim(color_mask) end),'n/a') as color_mask ,coalesce((case when trim(color_offset)='' then null else trim(color_offset) end),0) as color_offset ,coalesce((case when trim(color_septr)='' then null else trim(color_septr) end),'n/a') as color_septr ,coalesce((case when trim(color_sfx_mask)='' then null else trim(color_sfx_mask) end),'n/a') as color_sfx_mask ,coalesce((case when trim(color_sfx_offset)='' then null else trim(color_sfx_offset) end),0) as color_sfx_offset ,coalesce((case when trim(color_sfx_septr)='' then null else trim(color_sfx_septr) end),'n/a') as color_sfx_septr ,coalesce((case when trim(dflt_batch_stat_code)='' then null else trim(dflt_batch_stat_code) end),0) as dflt_batch_stat_code ,coalesce((case when trim(dsp_item_desc_flag)='' then null else trim(dsp_item_desc_flag) end),'n/a') as dsp_item_desc_flag ,coalesce((case when trim(lock_code_invalid)='' then null else trim(lock_code_invalid) end),'n/a') as lock_code_invalid ,coalesce((case when trim(pick_lock_code_exp_rec)='' then null else trim(pick_lock_code_exp_rec) end),'n/a') as pick_lock_code_exp_rec ,coalesce((case when trim(pick_lock_code_held)='' then null else trim(pick_lock_code_held) end),'n/a') as pick_lock_code_held ,coalesce((case when trim(proc_whse_xfer)='' then null else trim(proc_whse_xfer) end),'n/a') as proc_whse_xfer ,coalesce((case when trim(qual_mask)='' then null else trim(qual_mask) end),'n/a') as qual_mask ,coalesce((case when trim(qual_offset)='' then null else trim(qual_offset) end),0) as qual_offset ,coalesce((case when trim(qual_septr)='' then null else trim(qual_septr) end),'n/a') as qual_septr ,coalesce((case when trim(recv_batch)='' then null else trim(recv_batch) end),'n/a') as recv_batch ,coalesce((case when trim(season_mask)='' then null else trim(season_mask) end),'n/a') as season_mask ,coalesce((case when trim(season_offset)='' then null else trim(season_offset) end),0) as season_offset ,coalesce((case when trim(season_septr)='' then null else trim(season_septr) end),'n/a') as season_septr ,coalesce((case when trim(season_yr_mask)='' then null else trim(season_yr_mask) end),'n/a') as season_yr_mask ,coalesce((case when trim(season_yr_offset)='' then null else trim(season_yr_offset) end),0) as season_yr_offset ,coalesce((case when trim(season_yr_septr)='' then null else trim(season_yr_septr) end),'n/a') as season_yr_septr ,coalesce((case when trim(sec_dim_mask)='' then null else trim(sec_dim_mask) end),'n/a') as sec_dim_mask ,coalesce((case when trim(sec_dim_offset)='' then null else trim(sec_dim_offset) end),0) as sec_dim_offset ,coalesce((case when trim(sec_dim_septr)='' then null else trim(sec_dim_septr) end),'n/a') as sec_dim_septr ,coalesce((case when trim(size_desc_mask)='' then null else trim(size_desc_mask) end),'n/a') as size_desc_mask ,coalesce((case when trim(size_desc_offset)='' then null else trim(size_desc_offset) end),0) as size_desc_offset ,coalesce((case when trim(size_desc_septr)='' then null else trim(size_desc_septr) end),'n/a') as size_desc_septr ,coalesce((case when trim(sku_mask)='' then null else trim(sku_mask) end),'n/a') as sku_mask ,coalesce((case when trim(sku_offset_mask)='' then null else trim(sku_offset_mask) end),'n/a') as sku_offset_mask ,coalesce((case when trim(style_mask)='' then null else trim(style_mask) end),'n/a') as style_mask ,coalesce((case when trim(style_offset)='' then null else trim(style_offset) end),0) as style_offset ,coalesce((case when trim(style_septr)='' then null else trim(style_septr) end),'n/a') as style_septr ,coalesce((case when trim(style_sfx_mask)='' then null else trim(style_sfx_mask) end),'n/a') as style_sfx_mask ,coalesce((case when trim(style_sfx_offset)='' then null else trim(style_sfx_offset) end),0) as style_sfx_offset ,coalesce((case when trim(style_sfx_septr)='' then null else trim(style_sfx_septr) end),'n/a') as style_sfx_septr ,coalesce((case when trim(ucc_ean_co_pfx)='' then null else trim(ucc_ean_co_pfx) end),'n/a') as ucc_ean_co_pfx ,coalesce((case when trim(parent_company_id)='' then null else trim(parent_company_id) end),0) as parent_company_id ,coalesce((case when trim(is_initialized)='' then null else trim(is_initialized) end),0) as is_initialized ,to_date(to_utc_timestamp(last_updated_dttm, "est5edt")) as strt_dt ,lag(date_sub(to_utc_timestamp(last_updated_dttm, "est5edt"),1),1,'9999-12-31') over(partition by company_id order by key desc) as end_dt from scct_raw_db.maprdb_company_raw
! echo completed loading into scct_db.tms_company ;
-------------------------- ---cocatenate files for target table tms_company -------------------------  set tez.job.name=stage1:tms_company:cocatenate files on tms_company;
! echo started cocatenate files;
alter table scct_db.tms_company concatenate;
! echo completed cocatenate files;
