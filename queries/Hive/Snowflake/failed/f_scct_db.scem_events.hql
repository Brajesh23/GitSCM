! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
insert overwrite table scct_db.scem_events partition(proc_dt) select coalesce((case when trim(ehdr.batch_guid) = '' then null else ehdr.batch_guid end) , 'n/a') as batch_guid ,coalesce((case when trim(ehdr.city1) = '' then null else ehdr.city1 end) , 'n/a') as town_or_city , coalesce((case when ehdr.client = '' then null else ehdr.client end) , 0) as client , coalesce((case when trim(ehdr.country1) = '' then null else ehdr.country1 end) , 'n/a') as country_indicator , coalesce((case when trim(ehdr.datacs) = '' then null else ehdr.datacs end) , 'n/a') as data_cd_set , coalesce((case when trim(ehdr.dataid) = '' then null else ehdr.dataid end) , 'n/a') as data_cd_id , coalesce((case when trim(ehdr.dcnftp) = '' then null else ehdr.dcnftp end) , 'n/a') as confirmation_typ , coalesce((case when trim(ehdr.elccod) = '' then null else ehdr.elccod end) , 'n/a') as estimate_date_loc_cd_set , coalesce((case when trim(ehdr.elcid1) = '' then null else ehdr.elcid1 end) , 'n/a') as estimation_loc_id1 , coalesce((case when trim(ehdr.elcid2) = '' then null else ehdr.elcid2 end) , 'n/a') as estimate_loc_id2 , coalesce((case when trim(ehdr.estqul) = '' then null else ehdr.estqul end) , 'n/a') as est_tm_qualifier , coalesce((case when ehdr.etxtst = 0 then null else concat((substring(cast(ehdr.etxtst as bigint),1,4)),'-',(substring(cast(ehdr.etxtst as bigint),5,2)),'-',(substring(cast(ehdr.etxtst as bigint),7,2)),' ',(substring(cast(ehdr.etxtst as bigint),9,2)),':',(substring(cast(ehdr.etxtst as bigint),11,2)),':',(substring(cast(ehdr.etxtst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as estimated_tm_utc_ts , coalesce((case when ehdr.evltst = 0 then null else concat((substring(cast(ehdr.evltst as bigint),1,4)),'-',(substring(cast(ehdr.evltst as bigint),5,2)),'-',(substring(cast(ehdr.evltst as bigint),7,2)),' ',(substring(cast(ehdr.evltst as bigint),9,2)),':',(substring(cast(ehdr.evltst as bigint),11,2)),':',(substring(cast(ehdr.evltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as local_ts , coalesce((case when trim(ehdr.evtcod) = '' then null else ehdr.evtcod end) , 'n/a') as ext_event_cd_set , coalesce((case when trim(ehdr.evtdat) = 0 then null else ehdr.evtdat end) , '9999-12-31') as event_dt , coalesce((case when trim(ehdr.evtid) = '' then null else ehdr.evtid end) , 'n/a') as ext_event_cd_id , coalesce((case when trim(ehdr.evttim) = '' then null else ehdr.evttim end) , 'n/a') as event_tm , coalesce((case when ehdr.evttst = 0 then null else concat((substring(cast(ehdr.evttst as bigint),1,4)),'-',(substring(cast(ehdr.evttst as bigint),5,2)),'-',(substring(cast(ehdr.evttst as bigint),7,2)),' ',(substring(cast(ehdr.evttst as bigint),9,2)),':',(substring(cast(ehdr.evttst as bigint),11,2)),':',(substring(cast(ehdr.evttst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as event_utc_ts , coalesce((case when trim(ehdr.evtzon) = '' then null else ehdr.evtzon end) , 'n/a') as time_stamp_time_zone , coalesce((case when trim(ehdr.evt_guid) = '' then null else ehdr.evt_guid end) , 'n/a') as globally_unique_id , coalesce((case when trim(ehdr.ext_loccod) = '' then null else ehdr.ext_loccod end) , 'n/a') as external_location_cd_set , coalesce((case when trim(ehdr.ext_locid1) = '' then null else ehdr.ext_locid1 end) , 'n/a') as ext_loc_id1 , coalesce((case when trim(ehdr.ext_locid2) = '' then null else ehdr.ext_locid2 end) , 'n/a') as ext_loc_id2 , coalesce((case when trim(ehdr.ext_repcod) = '' then null else ehdr.ext_repcod end) , 'n/a') as external_partner_cd_set , coalesce((case when trim(ehdr.ext_repid) = '' then null else ehdr.ext_repid end) , 'n/a') as external_partner_cd_id , coalesce((case when trim(ehdr.ext_table_id) = '' then null else ehdr.ext_table_id end) , 'n/a') as extension_table_id , coalesce((case when trim(ehdr.ext_table_name) = '' then null else ehdr.ext_table_name end) , 'n/a') as extension_table_nm , coalesce((case when trim(ehdr.idocid) = '' then null else ehdr.idocid end) , 'n/a') as idoc_nbr , coalesce((case when trim(ehdr.int_ev_cod) = '' then null else ehdr.int_ev_cod end) , 'n/a') as internal_event_cd , coalesce((case when trim(ehdr.int_sr_code) = '' then null else ehdr.int_sr_code end) , 'n/a') as event_reason_internal_cd , coalesce((case when trim(ehdr.invalid_data) = '' then null else ehdr.invalid_data end) , 'n/a') as invalid_data , coalesce((case when trim(ehdr.loccod) = '' then null else ehdr.loccod end) , 'n/a') as location_cd_set , coalesce((case when trim(ehdr.locid1) = '' then null else ehdr.locid1 end) , 'n/a') as location_cd_id_1 , coalesce((case when trim(ehdr.locid2) = '' then null else ehdr.locid2 end) , 'n/a') as location_cd_id_2 , coalesce((case when trim(ehdr.locnam) = '' then null else ehdr.locnam end) , 'n/a') as location , coalesce((case when trim(ehdr.loczon) = '' then null else ehdr.loczon end) , 'n/a') as valid_loc_time_zone , coalesce((case when trim(ehdr.lodsts) = '' then null else ehdr.lodsts end) , 'n/a') as loading_status , coalesce((case when trim(ehdr.msgmod) = '' then null else ehdr.msgmod end) , 'n/a') as msg_creation_typ , coalesce((case when trim(ehdr.msgnum) = '' then null else ehdr.msgnum end) , 'n/a') as sender_evt_msg_nbr , coalesce((case when trim(ehdr.msgsrctyp) = '' then null else ehdr.msgsrctyp end) , 'n/a') as evt_msg_source_typ , coalesce((case when trim(ehdr.msg_deleted) = '' then null else ehdr.msg_deleted end) , 'n/a') as message_deleted , coalesce((case when trim(ehdr.msg_not_sent) = '' then null else ehdr.msg_not_sent end) , 'n/a') as evt_msg_buffered , coalesce((case when trim(ehdr.multiple_trk_ids) = '' then null else ehdr.multiple_trk_ids end) , 'n/a') as multipl_trk_id , coalesce((case when trim(ehdr.physnd) = '' then null else ehdr.physnd end) , 'n/a') as em_sender_log_sys , coalesce((case when trim(ehdr.phystp) = '' then null else ehdr.phystp end) , 'n/a') as physical_sender_typ , coalesce((case when trim(ehdr.postl_cod1) = '' then null else ehdr.postl_cod1 end) , 'n/a') as postal_cd , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2)),' ',(substring(cast(ehdr.prctst as bigint),9,2)),':',(substring(cast(ehdr.prctst as bigint),11,2)),':',(substring(cast(ehdr.prctst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as proc_ts , coalesce((case when trim(ehdr.process_inactive) = '' then null else ehdr.process_inactive end) , 'n/a') as procevt_msg_inact_ehdr , coalesce((case when trim(ehdr.prodds) = '' then null else ehdr.prodds end) , 'n/a') as product_description , coalesce((case when trim(ehdr.proddt) = '' then null else ehdr.proddt end) , 'n/a') as product_desc , coalesce((case when trim(ehdr.rcvcod) = '' then null else ehdr.rcvcod end) , 'n/a') as recipient_cd_set , coalesce((case when trim(ehdr.rcvid) = '' then null else ehdr.rcvid end) , 'n/a') as recipient_cd_id , coalesce((case when trim(ehdr.rcvnam) = '' then null else ehdr.rcvnam end) , 'n/a') as recipient , coalesce((case when trim(ehdr.region) = '' then null else ehdr.region end) , 'n/a') as region_state , coalesce((case when ehdr.reltst = 0 then null else concat((substring(cast(ehdr.reltst as bigint),1,4)),'-',(substring(cast(ehdr.reltst as bigint),5,2)),'-',(substring(cast(ehdr.reltst as bigint),7,2)),' ',(substring(cast(ehdr.reltst as bigint),9,2)),':',(substring(cast(ehdr.reltst as bigint),11,2)),':',(substring(cast(ehdr.reltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as reporting_ts , coalesce((case when trim(ehdr.repcod) = '' then null else ehdr.repcod end) , 'n/a') as rep_part_cd_set , coalesce((case when ehdr.repdat = 0 then null else concat((substring(cast(ehdr.repdat as bigint),1,4)),'-',(substring(cast(ehdr.repdat as bigint),5,2)),'-',(substring(cast(ehdr.repdat as bigint),7,2)),' ',(substring(cast(ehdr.repdat as bigint),9,2)),':',(substring(cast(ehdr.repdat as bigint),11,2)),':',(substring(cast(ehdr.repdat as bigint),13,2))) end) ,'9999-12-31') as evt_msg_trans_dt , coalesce((case when trim(ehdr.repid) = '' then null else ehdr.repid end) , 'n/a') as rep_partner_cd_id , coalesce((case when trim(ehdr.repm) = '' then null else ehdr.repm end) , 'n/a') as rep_partner_name , coalesce((case when trim(ehdr.reptim) = '' then null else ehdr.reptim end) , 'n/a') as evt_msg_trans_tm , coalesce((case when ehdr.reptst = 0 then null else concat((substring(cast(ehdr.reptst as bigint),1,4)),'-',(substring(cast(ehdr.reptst as bigint),5,2)),'-',(substring(cast(ehdr.reptst as bigint),7,2)),' ',(substring(cast(ehdr.reptst as bigint),9,2)),':',(substring(cast(ehdr.reptst as bigint),11,2)),':',(substring(cast(ehdr.reptst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as transmission_ts , coalesce((case when trim(ehdr.repzon) = '' then null else ehdr.repzon end) , 'n/a') as evt_msg_time_zone , coalesce((case when trim(ehdr.save_mode) = '' then null else ehdr.save_mode end) , 'n/a') as evt_msg_save_mode , coalesce((case when trim(ehdr.sndcod) = '' then null else ehdr.sndcod end) , 'n/a') as sender_cd_set , coalesce((case when trim(ehdr.sndid) = '' then null else ehdr.sndid end) , 'n/a') as sender_cd_id , coalesce((case when trim(ehdr.sndnam) = '' then null else ehdr.sndnam end) , 'n/a') as sender_name , coalesce((case when trim(ehdr.srccod) = '' then null else ehdr.srccod end) , 'n/a') as ev_reason_cd_set , coalesce((case when trim(ehdr.srcid) = '' then null else ehdr.srcid end) , 'n/a') as ev_reason_cd_id , coalesce((case when trim(ehdr.srctx) = '' then null else ehdr.srctx end) , 'n/a') as status_reason_txt , coalesce((case when trim(ehdr.tipcod) = '' then null else ehdr.tipcod end) , 'n/a') as tr_id_provider_cs , coalesce((case when trim(ehdr.tipid) = '' then null else ehdr.tipid end) , 'n/a') as prov_cd_id , coalesce((case when trim(ehdr.tipnam) = '' then null else ehdr.tipnam end) , 'n/a') as tr_id_prov_name , coalesce((case when trim(ehdr.trxcod) = '' then null else ehdr.trxcod end) , 'n/a') as tracking_id_cd_set , coalesce((case when trim(ehdr.trxid) = '' then null else ehdr.trxid end) , 'n/a') as tracking_id , coalesce((case when trim(ehdr.username) = '' then null else ehdr.username end) , 'n/a') as user_name , coalesce((case when ehdr.version = '' then null else ehdr.version end) , 0) as sap_em_version , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') as proc_dt from sap_stage0.saptrx_evm_hdr ehdr  where  coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') >= date_sub(current_date,90)
! echo completed loading into scct_db.scem_events;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
insert overwrite table scct_db.scem_events partition(proc_dt) select coalesce((case when trim(ehdr.batch_guid) = '' then null else ehdr.batch_guid end) , 'n/a') as batch_guid ,coalesce((case when trim(ehdr.city1) = '' then null else ehdr.city1 end) , 'n/a') as town_or_city , coalesce((case when ehdr.client = '' then null else ehdr.client end) , 0) as client , coalesce((case when trim(ehdr.country1) = '' then null else ehdr.country1 end) , 'n/a') as country_indicator , coalesce((case when trim(ehdr.datacs) = '' then null else ehdr.datacs end) , 'n/a') as data_cd_set , coalesce((case when trim(ehdr.dataid) = '' then null else ehdr.dataid end) , 'n/a') as data_cd_id , coalesce((case when trim(ehdr.dcnftp) = '' then null else ehdr.dcnftp end) , 'n/a') as confirmation_typ , coalesce((case when trim(ehdr.elccod) = '' then null else ehdr.elccod end) , 'n/a') as estimate_date_loc_cd_set , coalesce((case when trim(ehdr.elcid1) = '' then null else ehdr.elcid1 end) , 'n/a') as estimation_loc_id1 , coalesce((case when trim(ehdr.elcid2) = '' then null else ehdr.elcid2 end) , 'n/a') as estimate_loc_id2 , coalesce((case when trim(ehdr.estqul) = '' then null else ehdr.estqul end) , 'n/a') as est_tm_qualifier , coalesce((case when ehdr.etxtst = 0 then null else concat((substring(cast(ehdr.etxtst as bigint),1,4)),'-',(substring(cast(ehdr.etxtst as bigint),5,2)),'-',(substring(cast(ehdr.etxtst as bigint),7,2)),' ',(substring(cast(ehdr.etxtst as bigint),9,2)),':',(substring(cast(ehdr.etxtst as bigint),11,2)),':',(substring(cast(ehdr.etxtst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as estimated_tm_utc_ts , coalesce((case when ehdr.evltst = 0 then null else concat((substring(cast(ehdr.evltst as bigint),1,4)),'-',(substring(cast(ehdr.evltst as bigint),5,2)),'-',(substring(cast(ehdr.evltst as bigint),7,2)),' ',(substring(cast(ehdr.evltst as bigint),9,2)),':',(substring(cast(ehdr.evltst as bigint),11,2)),':',(substring(cast(ehdr.evltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as local_ts , coalesce((case when trim(ehdr.evtcod) = '' then null else ehdr.evtcod end) , 'n/a') as ext_event_cd_set , coalesce((case when trim(ehdr.evtdat) = 0 then null else ehdr.evtdat end) , '9999-12-31') as event_dt , coalesce((case when trim(ehdr.evtid) = '' then null else ehdr.evtid end) , 'n/a') as ext_event_cd_id , coalesce((case when trim(ehdr.evttim) = '' then null else ehdr.evttim end) , 'n/a') as event_tm , coalesce((case when ehdr.evttst = 0 then null else concat((substring(cast(ehdr.evttst as bigint),1,4)),'-',(substring(cast(ehdr.evttst as bigint),5,2)),'-',(substring(cast(ehdr.evttst as bigint),7,2)),' ',(substring(cast(ehdr.evttst as bigint),9,2)),':',(substring(cast(ehdr.evttst as bigint),11,2)),':',(substring(cast(ehdr.evttst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as event_utc_ts , coalesce((case when trim(ehdr.evtzon) = '' then null else ehdr.evtzon end) , 'n/a') as time_stamp_time_zone , coalesce((case when trim(ehdr.evt_guid) = '' then null else ehdr.evt_guid end) , 'n/a') as globally_unique_id , coalesce((case when trim(ehdr.ext_loccod) = '' then null else ehdr.ext_loccod end) , 'n/a') as external_location_cd_set , coalesce((case when trim(ehdr.ext_locid1) = '' then null else ehdr.ext_locid1 end) , 'n/a') as ext_loc_id1 , coalesce((case when trim(ehdr.ext_locid2) = '' then null else ehdr.ext_locid2 end) , 'n/a') as ext_loc_id2 , coalesce((case when trim(ehdr.ext_repcod) = '' then null else ehdr.ext_repcod end) , 'n/a') as external_partner_cd_set , coalesce((case when trim(ehdr.ext_repid) = '' then null else ehdr.ext_repid end) , 'n/a') as external_partner_cd_id , coalesce((case when trim(ehdr.ext_table_id) = '' then null else ehdr.ext_table_id end) , 'n/a') as extension_table_id , coalesce((case when trim(ehdr.ext_table_name) = '' then null else ehdr.ext_table_name end) , 'n/a') as extension_table_nm , coalesce((case when trim(ehdr.idocid) = '' then null else ehdr.idocid end) , 'n/a') as idoc_nbr , coalesce((case when trim(ehdr.int_ev_cod) = '' then null else ehdr.int_ev_cod end) , 'n/a') as internal_event_cd , coalesce((case when trim(ehdr.int_sr_code) = '' then null else ehdr.int_sr_code end) , 'n/a') as event_reason_internal_cd , coalesce((case when trim(ehdr.invalid_data) = '' then null else ehdr.invalid_data end) , 'n/a') as invalid_data , coalesce((case when trim(ehdr.loccod) = '' then null else ehdr.loccod end) , 'n/a') as location_cd_set , coalesce((case when trim(ehdr.locid1) = '' then null else ehdr.locid1 end) , 'n/a') as location_cd_id_1 , coalesce((case when trim(ehdr.locid2) = '' then null else ehdr.locid2 end) , 'n/a') as location_cd_id_2 , coalesce((case when trim(ehdr.locnam) = '' then null else ehdr.locnam end) , 'n/a') as location , coalesce((case when trim(ehdr.loczon) = '' then null else ehdr.loczon end) , 'n/a') as valid_loc_time_zone , coalesce((case when trim(ehdr.lodsts) = '' then null else ehdr.lodsts end) , 'n/a') as loading_status , coalesce((case when trim(ehdr.msgmod) = '' then null else ehdr.msgmod end) , 'n/a') as msg_creation_typ , coalesce((case when trim(ehdr.msgnum) = '' then null else ehdr.msgnum end) , 'n/a') as sender_evt_msg_nbr , coalesce((case when trim(ehdr.msgsrctyp) = '' then null else ehdr.msgsrctyp end) , 'n/a') as evt_msg_source_typ , coalesce((case when trim(ehdr.msg_deleted) = '' then null else ehdr.msg_deleted end) , 'n/a') as message_deleted , coalesce((case when trim(ehdr.msg_not_sent) = '' then null else ehdr.msg_not_sent end) , 'n/a') as evt_msg_buffered , coalesce((case when trim(ehdr.multiple_trk_ids) = '' then null else ehdr.multiple_trk_ids end) , 'n/a') as multipl_trk_id , coalesce((case when trim(ehdr.physnd) = '' then null else ehdr.physnd end) , 'n/a') as em_sender_log_sys , coalesce((case when trim(ehdr.phystp) = '' then null else ehdr.phystp end) , 'n/a') as physical_sender_typ , coalesce((case when trim(ehdr.postl_cod1) = '' then null else ehdr.postl_cod1 end) , 'n/a') as postal_cd , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2)),' ',(substring(cast(ehdr.prctst as bigint),9,2)),':',(substring(cast(ehdr.prctst as bigint),11,2)),':',(substring(cast(ehdr.prctst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as proc_ts , coalesce((case when trim(ehdr.process_inactive) = '' then null else ehdr.process_inactive end) , 'n/a') as procevt_msg_inact_ehdr , coalesce((case when trim(ehdr.prodds) = '' then null else ehdr.prodds end) , 'n/a') as product_description , coalesce((case when trim(ehdr.proddt) = '' then null else ehdr.proddt end) , 'n/a') as product_desc , coalesce((case when trim(ehdr.rcvcod) = '' then null else ehdr.rcvcod end) , 'n/a') as recipient_cd_set , coalesce((case when trim(ehdr.rcvid) = '' then null else ehdr.rcvid end) , 'n/a') as recipient_cd_id , coalesce((case when trim(ehdr.rcvnam) = '' then null else ehdr.rcvnam end) , 'n/a') as recipient , coalesce((case when trim(ehdr.region) = '' then null else ehdr.region end) , 'n/a') as region_state , coalesce((case when ehdr.reltst = 0 then null else concat((substring(cast(ehdr.reltst as bigint),1,4)),'-',(substring(cast(ehdr.reltst as bigint),5,2)),'-',(substring(cast(ehdr.reltst as bigint),7,2)),' ',(substring(cast(ehdr.reltst as bigint),9,2)),':',(substring(cast(ehdr.reltst as bigint),11,2)),':',(substring(cast(ehdr.reltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as reporting_ts , coalesce((case when trim(ehdr.repcod) = '' then null else ehdr.repcod end) , 'n/a') as rep_part_cd_set , coalesce((case when ehdr.repdat = 0 then null else concat((substring(cast(ehdr.repdat as bigint),1,4)),'-',(substring(cast(ehdr.repdat as bigint),5,2)),'-',(substring(cast(ehdr.repdat as bigint),7,2)),' ',(substring(cast(ehdr.repdat as bigint),9,2)),':',(substring(cast(ehdr.repdat as bigint),11,2)),':',(substring(cast(ehdr.repdat as bigint),13,2))) end) ,'9999-12-31') as evt_msg_trans_dt , coalesce((case when trim(ehdr.repid) = '' then null else ehdr.repid end) , 'n/a') as rep_partner_cd_id , coalesce((case when trim(ehdr.repm) = '' then null else ehdr.repm end) , 'n/a') as rep_partner_name , coalesce((case when trim(ehdr.reptim) = '' then null else ehdr.reptim end) , 'n/a') as evt_msg_trans_tm , coalesce((case when ehdr.reptst = 0 then null else concat((substring(cast(ehdr.reptst as bigint),1,4)),'-',(substring(cast(ehdr.reptst as bigint),5,2)),'-',(substring(cast(ehdr.reptst as bigint),7,2)),' ',(substring(cast(ehdr.reptst as bigint),9,2)),':',(substring(cast(ehdr.reptst as bigint),11,2)),':',(substring(cast(ehdr.reptst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as transmission_ts , coalesce((case when trim(ehdr.repzon) = '' then null else ehdr.repzon end) , 'n/a') as evt_msg_time_zone , coalesce((case when trim(ehdr.save_mode) = '' then null else ehdr.save_mode end) , 'n/a') as evt_msg_save_mode , coalesce((case when trim(ehdr.sndcod) = '' then null else ehdr.sndcod end) , 'n/a') as sender_cd_set , coalesce((case when trim(ehdr.sndid) = '' then null else ehdr.sndid end) , 'n/a') as sender_cd_id , coalesce((case when trim(ehdr.sndnam) = '' then null else ehdr.sndnam end) , 'n/a') as sender_name , coalesce((case when trim(ehdr.srccod) = '' then null else ehdr.srccod end) , 'n/a') as ev_reason_cd_set , coalesce((case when trim(ehdr.srcid) = '' then null else ehdr.srcid end) , 'n/a') as ev_reason_cd_id , coalesce((case when trim(ehdr.srctx) = '' then null else ehdr.srctx end) , 'n/a') as status_reason_txt , coalesce((case when trim(ehdr.tipcod) = '' then null else ehdr.tipcod end) , 'n/a') as tr_id_provider_cs , coalesce((case when trim(ehdr.tipid) = '' then null else ehdr.tipid end) , 'n/a') as prov_cd_id , coalesce((case when trim(ehdr.tipnam) = '' then null else ehdr.tipnam end) , 'n/a') as tr_id_prov_name , coalesce((case when trim(ehdr.trxcod) = '' then null else ehdr.trxcod end) , 'n/a') as tracking_id_cd_set , coalesce((case when trim(ehdr.trxid) = '' then null else ehdr.trxid end) , 'n/a') as tracking_id , coalesce((case when trim(ehdr.username) = '' then null else ehdr.username end) , 'n/a') as user_name , coalesce((case when ehdr.version = '' then null else ehdr.version end) , 0) as sap_em_version , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') as proc_dt from sap_stage0.saptrx_evm_hdr ehdr  where  coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') >= date_sub(current_date,90)
! echo completed loading into scct_db.scem_events;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
insert overwrite table scct_db.scem_events partition(proc_dt) select coalesce((case when trim(ehdr.batch_guid) = '' then null else ehdr.batch_guid end) , 'n/a') as batch_guid ,coalesce((case when trim(ehdr.city1) = '' then null else ehdr.city1 end) , 'n/a') as town_or_city , coalesce((case when ehdr.client = '' then null else ehdr.client end) , 0) as client , coalesce((case when trim(ehdr.country1) = '' then null else ehdr.country1 end) , 'n/a') as country_indicator , coalesce((case when trim(ehdr.datacs) = '' then null else ehdr.datacs end) , 'n/a') as data_cd_set , coalesce((case when trim(ehdr.dataid) = '' then null else ehdr.dataid end) , 'n/a') as data_cd_id , coalesce((case when trim(ehdr.dcnftp) = '' then null else ehdr.dcnftp end) , 'n/a') as confirmation_typ , coalesce((case when trim(ehdr.elccod) = '' then null else ehdr.elccod end) , 'n/a') as estimate_date_loc_cd_set , coalesce((case when trim(ehdr.elcid1) = '' then null else ehdr.elcid1 end) , 'n/a') as estimation_loc_id1 , coalesce((case when trim(ehdr.elcid2) = '' then null else ehdr.elcid2 end) , 'n/a') as estimate_loc_id2 , coalesce((case when trim(ehdr.estqul) = '' then null else ehdr.estqul end) , 'n/a') as est_tm_qualifier , coalesce((case when ehdr.etxtst = 0 then null else concat((substring(cast(ehdr.etxtst as bigint),1,4)),'-',(substring(cast(ehdr.etxtst as bigint),5,2)),'-',(substring(cast(ehdr.etxtst as bigint),7,2)),' ',(substring(cast(ehdr.etxtst as bigint),9,2)),':',(substring(cast(ehdr.etxtst as bigint),11,2)),':',(substring(cast(ehdr.etxtst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as estimated_tm_utc_ts , coalesce((case when ehdr.evltst = 0 then null else concat((substring(cast(ehdr.evltst as bigint),1,4)),'-',(substring(cast(ehdr.evltst as bigint),5,2)),'-',(substring(cast(ehdr.evltst as bigint),7,2)),' ',(substring(cast(ehdr.evltst as bigint),9,2)),':',(substring(cast(ehdr.evltst as bigint),11,2)),':',(substring(cast(ehdr.evltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as local_ts , coalesce((case when trim(ehdr.evtcod) = '' then null else ehdr.evtcod end) , 'n/a') as ext_event_cd_set , coalesce((case when trim(ehdr.evtdat) = 0 then null else ehdr.evtdat end) , '9999-12-31') as event_dt , coalesce((case when trim(ehdr.evtid) = '' then null else ehdr.evtid end) , 'n/a') as ext_event_cd_id , coalesce((case when trim(ehdr.evttim) = '' then null else ehdr.evttim end) , 'n/a') as event_tm , coalesce((case when ehdr.evttst = 0 then null else concat((substring(cast(ehdr.evttst as bigint),1,4)),'-',(substring(cast(ehdr.evttst as bigint),5,2)),'-',(substring(cast(ehdr.evttst as bigint),7,2)),' ',(substring(cast(ehdr.evttst as bigint),9,2)),':',(substring(cast(ehdr.evttst as bigint),11,2)),':',(substring(cast(ehdr.evttst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as event_utc_ts , coalesce((case when trim(ehdr.evtzon) = '' then null else ehdr.evtzon end) , 'n/a') as time_stamp_time_zone , coalesce((case when trim(ehdr.evt_guid) = '' then null else ehdr.evt_guid end) , 'n/a') as globally_unique_id , coalesce((case when trim(ehdr.ext_loccod) = '' then null else ehdr.ext_loccod end) , 'n/a') as external_location_cd_set , coalesce((case when trim(ehdr.ext_locid1) = '' then null else ehdr.ext_locid1 end) , 'n/a') as ext_loc_id1 , coalesce((case when trim(ehdr.ext_locid2) = '' then null else ehdr.ext_locid2 end) , 'n/a') as ext_loc_id2 , coalesce((case when trim(ehdr.ext_repcod) = '' then null else ehdr.ext_repcod end) , 'n/a') as external_partner_cd_set , coalesce((case when trim(ehdr.ext_repid) = '' then null else ehdr.ext_repid end) , 'n/a') as external_partner_cd_id , coalesce((case when trim(ehdr.ext_table_id) = '' then null else ehdr.ext_table_id end) , 'n/a') as extension_table_id , coalesce((case when trim(ehdr.ext_table_name) = '' then null else ehdr.ext_table_name end) , 'n/a') as extension_table_nm , coalesce((case when trim(ehdr.idocid) = '' then null else ehdr.idocid end) , 'n/a') as idoc_nbr , coalesce((case when trim(ehdr.int_ev_cod) = '' then null else ehdr.int_ev_cod end) , 'n/a') as internal_event_cd , coalesce((case when trim(ehdr.int_sr_code) = '' then null else ehdr.int_sr_code end) , 'n/a') as event_reason_internal_cd , coalesce((case when trim(ehdr.invalid_data) = '' then null else ehdr.invalid_data end) , 'n/a') as invalid_data , coalesce((case when trim(ehdr.loccod) = '' then null else ehdr.loccod end) , 'n/a') as location_cd_set , coalesce((case when trim(ehdr.locid1) = '' then null else ehdr.locid1 end) , 'n/a') as location_cd_id_1 , coalesce((case when trim(ehdr.locid2) = '' then null else ehdr.locid2 end) , 'n/a') as location_cd_id_2 , coalesce((case when trim(ehdr.locnam) = '' then null else ehdr.locnam end) , 'n/a') as location , coalesce((case when trim(ehdr.loczon) = '' then null else ehdr.loczon end) , 'n/a') as valid_loc_time_zone , coalesce((case when trim(ehdr.lodsts) = '' then null else ehdr.lodsts end) , 'n/a') as loading_status , coalesce((case when trim(ehdr.msgmod) = '' then null else ehdr.msgmod end) , 'n/a') as msg_creation_typ , coalesce((case when trim(ehdr.msgnum) = '' then null else ehdr.msgnum end) , 'n/a') as sender_evt_msg_nbr , coalesce((case when trim(ehdr.msgsrctyp) = '' then null else ehdr.msgsrctyp end) , 'n/a') as evt_msg_source_typ , coalesce((case when trim(ehdr.msg_deleted) = '' then null else ehdr.msg_deleted end) , 'n/a') as message_deleted , coalesce((case when trim(ehdr.msg_not_sent) = '' then null else ehdr.msg_not_sent end) , 'n/a') as evt_msg_buffered , coalesce((case when trim(ehdr.multiple_trk_ids) = '' then null else ehdr.multiple_trk_ids end) , 'n/a') as multipl_trk_id , coalesce((case when trim(ehdr.physnd) = '' then null else ehdr.physnd end) , 'n/a') as em_sender_log_sys , coalesce((case when trim(ehdr.phystp) = '' then null else ehdr.phystp end) , 'n/a') as physical_sender_typ , coalesce((case when trim(ehdr.postl_cod1) = '' then null else ehdr.postl_cod1 end) , 'n/a') as postal_cd , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2)),' ',(substring(cast(ehdr.prctst as bigint),9,2)),':',(substring(cast(ehdr.prctst as bigint),11,2)),':',(substring(cast(ehdr.prctst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as proc_ts , coalesce((case when trim(ehdr.process_inactive) = '' then null else ehdr.process_inactive end) , 'n/a') as procevt_msg_inact_ehdr , coalesce((case when trim(ehdr.prodds) = '' then null else ehdr.prodds end) , 'n/a') as product_description , coalesce((case when trim(ehdr.proddt) = '' then null else ehdr.proddt end) , 'n/a') as product_desc , coalesce((case when trim(ehdr.rcvcod) = '' then null else ehdr.rcvcod end) , 'n/a') as recipient_cd_set , coalesce((case when trim(ehdr.rcvid) = '' then null else ehdr.rcvid end) , 'n/a') as recipient_cd_id , coalesce((case when trim(ehdr.rcvnam) = '' then null else ehdr.rcvnam end) , 'n/a') as recipient , coalesce((case when trim(ehdr.region) = '' then null else ehdr.region end) , 'n/a') as region_state , coalesce((case when ehdr.reltst = 0 then null else concat((substring(cast(ehdr.reltst as bigint),1,4)),'-',(substring(cast(ehdr.reltst as bigint),5,2)),'-',(substring(cast(ehdr.reltst as bigint),7,2)),' ',(substring(cast(ehdr.reltst as bigint),9,2)),':',(substring(cast(ehdr.reltst as bigint),11,2)),':',(substring(cast(ehdr.reltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as reporting_ts , coalesce((case when trim(ehdr.repcod) = '' then null else ehdr.repcod end) , 'n/a') as rep_part_cd_set , coalesce((case when ehdr.repdat = 0 then null else concat((substring(cast(ehdr.repdat as bigint),1,4)),'-',(substring(cast(ehdr.repdat as bigint),5,2)),'-',(substring(cast(ehdr.repdat as bigint),7,2)),' ',(substring(cast(ehdr.repdat as bigint),9,2)),':',(substring(cast(ehdr.repdat as bigint),11,2)),':',(substring(cast(ehdr.repdat as bigint),13,2))) end) ,'9999-12-31') as evt_msg_trans_dt , coalesce((case when trim(ehdr.repid) = '' then null else ehdr.repid end) , 'n/a') as rep_partner_cd_id , coalesce((case when trim(ehdr.repm) = '' then null else ehdr.repm end) , 'n/a') as rep_partner_name , coalesce((case when trim(ehdr.reptim) = '' then null else ehdr.reptim end) , 'n/a') as evt_msg_trans_tm , coalesce((case when ehdr.reptst = 0 then null else concat((substring(cast(ehdr.reptst as bigint),1,4)),'-',(substring(cast(ehdr.reptst as bigint),5,2)),'-',(substring(cast(ehdr.reptst as bigint),7,2)),' ',(substring(cast(ehdr.reptst as bigint),9,2)),':',(substring(cast(ehdr.reptst as bigint),11,2)),':',(substring(cast(ehdr.reptst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as transmission_ts , coalesce((case when trim(ehdr.repzon) = '' then null else ehdr.repzon end) , 'n/a') as evt_msg_time_zone , coalesce((case when trim(ehdr.save_mode) = '' then null else ehdr.save_mode end) , 'n/a') as evt_msg_save_mode , coalesce((case when trim(ehdr.sndcod) = '' then null else ehdr.sndcod end) , 'n/a') as sender_cd_set , coalesce((case when trim(ehdr.sndid) = '' then null else ehdr.sndid end) , 'n/a') as sender_cd_id , coalesce((case when trim(ehdr.sndnam) = '' then null else ehdr.sndnam end) , 'n/a') as sender_name , coalesce((case when trim(ehdr.srccod) = '' then null else ehdr.srccod end) , 'n/a') as ev_reason_cd_set , coalesce((case when trim(ehdr.srcid) = '' then null else ehdr.srcid end) , 'n/a') as ev_reason_cd_id , coalesce((case when trim(ehdr.srctx) = '' then null else ehdr.srctx end) , 'n/a') as status_reason_txt , coalesce((case when trim(ehdr.tipcod) = '' then null else ehdr.tipcod end) , 'n/a') as tr_id_provider_cs , coalesce((case when trim(ehdr.tipid) = '' then null else ehdr.tipid end) , 'n/a') as prov_cd_id , coalesce((case when trim(ehdr.tipnam) = '' then null else ehdr.tipnam end) , 'n/a') as tr_id_prov_name , coalesce((case when trim(ehdr.trxcod) = '' then null else ehdr.trxcod end) , 'n/a') as tracking_id_cd_set , coalesce((case when trim(ehdr.trxid) = '' then null else ehdr.trxid end) , 'n/a') as tracking_id , coalesce((case when trim(ehdr.username) = '' then null else ehdr.username end) , 'n/a') as user_name , coalesce((case when ehdr.version = '' then null else ehdr.version end) , 0) as sap_em_version , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') as proc_dt from sap_stage0.saptrx_evm_hdr ehdr  where  coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') >= date_sub(current_date,90)
! echo completed loading into scct_db.scem_events;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
insert overwrite table scct_db.scem_events partition(proc_dt) select coalesce((case when trim(ehdr.batch_guid) = '' then null else ehdr.batch_guid end) , 'n/a') as batch_guid ,coalesce((case when trim(ehdr.city1) = '' then null else ehdr.city1 end) , 'n/a') as town_or_city , coalesce((case when ehdr.client = '' then null else ehdr.client end) , 0) as client , coalesce((case when trim(ehdr.country1) = '' then null else ehdr.country1 end) , 'n/a') as country_indicator , coalesce((case when trim(ehdr.datacs) = '' then null else ehdr.datacs end) , 'n/a') as data_cd_set , coalesce((case when trim(ehdr.dataid) = '' then null else ehdr.dataid end) , 'n/a') as data_cd_id , coalesce((case when trim(ehdr.dcnftp) = '' then null else ehdr.dcnftp end) , 'n/a') as confirmation_typ , coalesce((case when trim(ehdr.elccod) = '' then null else ehdr.elccod end) , 'n/a') as estimate_date_loc_cd_set , coalesce((case when trim(ehdr.elcid1) = '' then null else ehdr.elcid1 end) , 'n/a') as estimation_loc_id1 , coalesce((case when trim(ehdr.elcid2) = '' then null else ehdr.elcid2 end) , 'n/a') as estimate_loc_id2 , coalesce((case when trim(ehdr.estqul) = '' then null else ehdr.estqul end) , 'n/a') as est_tm_qualifier , coalesce((case when ehdr.etxtst = 0 then null else concat((substring(cast(ehdr.etxtst as bigint),1,4)),'-',(substring(cast(ehdr.etxtst as bigint),5,2)),'-',(substring(cast(ehdr.etxtst as bigint),7,2)),' ',(substring(cast(ehdr.etxtst as bigint),9,2)),':',(substring(cast(ehdr.etxtst as bigint),11,2)),':',(substring(cast(ehdr.etxtst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as estimated_tm_utc_ts , coalesce((case when ehdr.evltst = 0 then null else concat((substring(cast(ehdr.evltst as bigint),1,4)),'-',(substring(cast(ehdr.evltst as bigint),5,2)),'-',(substring(cast(ehdr.evltst as bigint),7,2)),' ',(substring(cast(ehdr.evltst as bigint),9,2)),':',(substring(cast(ehdr.evltst as bigint),11,2)),':',(substring(cast(ehdr.evltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as local_ts , coalesce((case when trim(ehdr.evtcod) = '' then null else ehdr.evtcod end) , 'n/a') as ext_event_cd_set , coalesce((case when trim(ehdr.evtdat) = 0 then null else ehdr.evtdat end) , '9999-12-31') as event_dt , coalesce((case when trim(ehdr.evtid) = '' then null else ehdr.evtid end) , 'n/a') as ext_event_cd_id , coalesce((case when trim(ehdr.evttim) = '' then null else ehdr.evttim end) , 'n/a') as event_tm , coalesce((case when ehdr.evttst = 0 then null else concat((substring(cast(ehdr.evttst as bigint),1,4)),'-',(substring(cast(ehdr.evttst as bigint),5,2)),'-',(substring(cast(ehdr.evttst as bigint),7,2)),' ',(substring(cast(ehdr.evttst as bigint),9,2)),':',(substring(cast(ehdr.evttst as bigint),11,2)),':',(substring(cast(ehdr.evttst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as event_utc_ts , coalesce((case when trim(ehdr.evtzon) = '' then null else ehdr.evtzon end) , 'n/a') as time_stamp_time_zone , coalesce((case when trim(ehdr.evt_guid) = '' then null else ehdr.evt_guid end) , 'n/a') as globally_unique_id , coalesce((case when trim(ehdr.ext_loccod) = '' then null else ehdr.ext_loccod end) , 'n/a') as external_location_cd_set , coalesce((case when trim(ehdr.ext_locid1) = '' then null else ehdr.ext_locid1 end) , 'n/a') as ext_loc_id1 , coalesce((case when trim(ehdr.ext_locid2) = '' then null else ehdr.ext_locid2 end) , 'n/a') as ext_loc_id2 , coalesce((case when trim(ehdr.ext_repcod) = '' then null else ehdr.ext_repcod end) , 'n/a') as external_partner_cd_set , coalesce((case when trim(ehdr.ext_repid) = '' then null else ehdr.ext_repid end) , 'n/a') as external_partner_cd_id , coalesce((case when trim(ehdr.ext_table_id) = '' then null else ehdr.ext_table_id end) , 'n/a') as extension_table_id , coalesce((case when trim(ehdr.ext_table_name) = '' then null else ehdr.ext_table_name end) , 'n/a') as extension_table_nm , coalesce((case when trim(ehdr.idocid) = '' then null else ehdr.idocid end) , 'n/a') as idoc_nbr , coalesce((case when trim(ehdr.int_ev_cod) = '' then null else ehdr.int_ev_cod end) , 'n/a') as internal_event_cd , coalesce((case when trim(ehdr.int_sr_code) = '' then null else ehdr.int_sr_code end) , 'n/a') as event_reason_internal_cd , coalesce((case when trim(ehdr.invalid_data) = '' then null else ehdr.invalid_data end) , 'n/a') as invalid_data , coalesce((case when trim(ehdr.loccod) = '' then null else ehdr.loccod end) , 'n/a') as location_cd_set , coalesce((case when trim(ehdr.locid1) = '' then null else ehdr.locid1 end) , 'n/a') as location_cd_id_1 , coalesce((case when trim(ehdr.locid2) = '' then null else ehdr.locid2 end) , 'n/a') as location_cd_id_2 , coalesce((case when trim(ehdr.locnam) = '' then null else ehdr.locnam end) , 'n/a') as location , coalesce((case when trim(ehdr.loczon) = '' then null else ehdr.loczon end) , 'n/a') as valid_loc_time_zone , coalesce((case when trim(ehdr.lodsts) = '' then null else ehdr.lodsts end) , 'n/a') as loading_status , coalesce((case when trim(ehdr.msgmod) = '' then null else ehdr.msgmod end) , 'n/a') as msg_creation_typ , coalesce((case when trim(ehdr.msgnum) = '' then null else ehdr.msgnum end) , 'n/a') as sender_evt_msg_nbr , coalesce((case when trim(ehdr.msgsrctyp) = '' then null else ehdr.msgsrctyp end) , 'n/a') as evt_msg_source_typ , coalesce((case when trim(ehdr.msg_deleted) = '' then null else ehdr.msg_deleted end) , 'n/a') as message_deleted , coalesce((case when trim(ehdr.msg_not_sent) = '' then null else ehdr.msg_not_sent end) , 'n/a') as evt_msg_buffered , coalesce((case when trim(ehdr.multiple_trk_ids) = '' then null else ehdr.multiple_trk_ids end) , 'n/a') as multipl_trk_id , coalesce((case when trim(ehdr.physnd) = '' then null else ehdr.physnd end) , 'n/a') as em_sender_log_sys , coalesce((case when trim(ehdr.phystp) = '' then null else ehdr.phystp end) , 'n/a') as physical_sender_typ , coalesce((case when trim(ehdr.postl_cod1) = '' then null else ehdr.postl_cod1 end) , 'n/a') as postal_cd , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2)),' ',(substring(cast(ehdr.prctst as bigint),9,2)),':',(substring(cast(ehdr.prctst as bigint),11,2)),':',(substring(cast(ehdr.prctst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as proc_ts , coalesce((case when trim(ehdr.process_inactive) = '' then null else ehdr.process_inactive end) , 'n/a') as procevt_msg_inact_ehdr , coalesce((case when trim(ehdr.prodds) = '' then null else ehdr.prodds end) , 'n/a') as product_description , coalesce((case when trim(ehdr.proddt) = '' then null else ehdr.proddt end) , 'n/a') as product_desc , coalesce((case when trim(ehdr.rcvcod) = '' then null else ehdr.rcvcod end) , 'n/a') as recipient_cd_set , coalesce((case when trim(ehdr.rcvid) = '' then null else ehdr.rcvid end) , 'n/a') as recipient_cd_id , coalesce((case when trim(ehdr.rcvnam) = '' then null else ehdr.rcvnam end) , 'n/a') as recipient , coalesce((case when trim(ehdr.region) = '' then null else ehdr.region end) , 'n/a') as region_state , coalesce((case when ehdr.reltst = 0 then null else concat((substring(cast(ehdr.reltst as bigint),1,4)),'-',(substring(cast(ehdr.reltst as bigint),5,2)),'-',(substring(cast(ehdr.reltst as bigint),7,2)),' ',(substring(cast(ehdr.reltst as bigint),9,2)),':',(substring(cast(ehdr.reltst as bigint),11,2)),':',(substring(cast(ehdr.reltst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as reporting_ts , coalesce((case when trim(ehdr.repcod) = '' then null else ehdr.repcod end) , 'n/a') as rep_part_cd_set , coalesce((case when ehdr.repdat = 0 then null else concat((substring(cast(ehdr.repdat as bigint),1,4)),'-',(substring(cast(ehdr.repdat as bigint),5,2)),'-',(substring(cast(ehdr.repdat as bigint),7,2)),' ',(substring(cast(ehdr.repdat as bigint),9,2)),':',(substring(cast(ehdr.repdat as bigint),11,2)),':',(substring(cast(ehdr.repdat as bigint),13,2))) end) ,'9999-12-31') as evt_msg_trans_dt , coalesce((case when trim(ehdr.repid) = '' then null else ehdr.repid end) , 'n/a') as rep_partner_cd_id , coalesce((case when trim(ehdr.repm) = '' then null else ehdr.repm end) , 'n/a') as rep_partner_name , coalesce((case when trim(ehdr.reptim) = '' then null else ehdr.reptim end) , 'n/a') as evt_msg_trans_tm , coalesce((case when ehdr.reptst = 0 then null else concat((substring(cast(ehdr.reptst as bigint),1,4)),'-',(substring(cast(ehdr.reptst as bigint),5,2)),'-',(substring(cast(ehdr.reptst as bigint),7,2)),' ',(substring(cast(ehdr.reptst as bigint),9,2)),':',(substring(cast(ehdr.reptst as bigint),11,2)),':',(substring(cast(ehdr.reptst as bigint),13,2))) end) ,'9999-12-31 00:00:00') as transmission_ts , coalesce((case when trim(ehdr.repzon) = '' then null else ehdr.repzon end) , 'n/a') as evt_msg_time_zone , coalesce((case when trim(ehdr.save_mode) = '' then null else ehdr.save_mode end) , 'n/a') as evt_msg_save_mode , coalesce((case when trim(ehdr.sndcod) = '' then null else ehdr.sndcod end) , 'n/a') as sender_cd_set , coalesce((case when trim(ehdr.sndid) = '' then null else ehdr.sndid end) , 'n/a') as sender_cd_id , coalesce((case when trim(ehdr.sndnam) = '' then null else ehdr.sndnam end) , 'n/a') as sender_name , coalesce((case when trim(ehdr.srccod) = '' then null else ehdr.srccod end) , 'n/a') as ev_reason_cd_set , coalesce((case when trim(ehdr.srcid) = '' then null else ehdr.srcid end) , 'n/a') as ev_reason_cd_id , coalesce((case when trim(ehdr.srctx) = '' then null else ehdr.srctx end) , 'n/a') as status_reason_txt , coalesce((case when trim(ehdr.tipcod) = '' then null else ehdr.tipcod end) , 'n/a') as tr_id_provider_cs , coalesce((case when trim(ehdr.tipid) = '' then null else ehdr.tipid end) , 'n/a') as prov_cd_id , coalesce((case when trim(ehdr.tipnam) = '' then null else ehdr.tipnam end) , 'n/a') as tr_id_prov_name , coalesce((case when trim(ehdr.trxcod) = '' then null else ehdr.trxcod end) , 'n/a') as tracking_id_cd_set , coalesce((case when trim(ehdr.trxid) = '' then null else ehdr.trxid end) , 'n/a') as tracking_id , coalesce((case when trim(ehdr.username) = '' then null else ehdr.username end) , 'n/a') as user_name , coalesce((case when ehdr.version = '' then null else ehdr.version end) , 0) as sap_em_version , coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') as proc_dt from sap_stage0.saptrx_evm_hdr ehdr  where  coalesce((case when ehdr.prctst = 0 then null else concat((substring(cast(ehdr.prctst as bigint),1,4)),'-',(substring(cast(ehdr.prctst as bigint),5,2)),'-',(substring(cast(ehdr.prctst as bigint),7,2))) end) ,'9999-12-31') >= date_sub(current_date,90)
! echo completed loading into scct_db.scem_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
