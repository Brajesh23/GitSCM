! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
! echo completed loading into scct_work_db.rockport_po_work;
! echo started loading into scct_db.rockport_po;
! echo completed loading into scct_db.rockport_po;
---jobname:scct-car-sales-hive-scct_db.sale_summary_day_loc_item -------------------------------------------------------------------------- ---target: table: scct_db.sale_summary_day_loc_item ---source: tables: analytics_db.sale_summary_day_loc_item, analytics_db.transaction_line_summary_ref, scct_db.car_pos_xref ---load type: incremental ---back posting: yes -- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ -------------------- -- 01.00.00.01 13nov19 scctp4-2546 mgohain initial version -- 01.00.00.02 10dec19 scctp4-2836 mgohain null value handled -- 01.00.00.03 16jan20 scctp4-2836 mgohain added crcy_exch_rt and location table and corrected logic -- 01.00.00.04 04feb20 scctp4-3071 mgohain added discount columns -- 01.00.00.05 07feb20 scctp4-3072 mgohain added metrics for clearance and giveaway -- 01.00.00.06 26feb20 scctp4-3100 mgohain added metrics for promo and regular sales -- 01.00.00.07 09mar20 scctp4-3266 abhishek added the trim function -- 01.00.00.08 18mar20 scctp4-3289 ryadav removed redundant joins,refactored code and added job setting for optimisation -- 01.00.00.09 24mar20 scctp4-3291 ryadav added ord_typ_cd column and added round() function to metrics -- 01.00.00.10 30mar20 mbdp-1645 ryadav added last_updated_timestamp column -- 01.00.00.10 13may20 scctp4-3332 akoti removed product_margin and prod_aur columns also corrected the ref table join to inner to avoid full refresh --------------------------------------------------------------------------  ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.sale_summary_day_loc_item table data -------------------------  insert overwrite table scct_db.sale_summary_day_loc_item partition(trxn_dt) select a.loc_nbr ,a.itm_nbr ,a.ord_typ_cd ,a.tot_sls_unt_qty ,a.tot_sls_rtl_amt ,a.tot_sls_cst_amt ,a.rtn_unt_qty ,a.rtn_rtl_amt ,a.rtn_cst_amt ,a.grs_sls_unt_qty ,a.grs_sls_rtl_amt ,a.grs_sls_cst_amt ,a.net_sls_unt_qty ,a.net_sls_rtl_amt ,a.net_sls_cst_amt ,a.net_sls_avg_unt_rtl_amt ,a.net_sls_avg_unt_cst_amt ,a.tot_sls_avg_unt_rtl_amt ,a.tot_sls_avg_unt_cst_amt --,a.net_sls_prod_mrgn_amt --,a.tot_sls_prod_mrgn_amt --,a.net_sls_prod_mrgn_pct --,a.prod_aur ,a.assc_disc_amt ,a.disc_unt_amt ,a.tot_clr_sls_rtl_amt ,a.tot_clr_sls_unt ,a.tot_clr_sls_cst_amt ,coalesce(round(a.tot_clr_sls_cst_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_auc ,coalesce(round(a.tot_clr_sls_rtl_amt/a.tot_clr_sls_unt,2), 0.0000) as tot_clr_sls_aur ,coalesce(round(a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt,2), 0.0000) as tot_clr_sls_prd_amt ,coalesce(round((a.tot_clr_sls_rtl_amt - a.tot_clr_sls_cst_amt)/a.tot_clr_sls_rtl_amt,2), 0.0000) as tot_clr_sls_prd_mrgn_prcntg ,a.tot_gvawy_sls_rtl_amt ,a.tot_gvawy_sls_unt ,a.tot_gvawy_sls_cst_amt ,coalesce(round(a.tot_gvawy_sls_cst_amt/a.tot_gvawy_sls_unt,2), 0.0000) as tot_gvawy_sls_auc ,0.0000 as tot_gvawy_sls_aur ,coalesce(round((a.tot_gvawy_sls_rtl_amt - a.tot_gvawy_sls_cst_amt),2), 0.0000) as tot_gvawy_sls_prd_mrgn_amt ,0.0000 as tot_gvawy_sls_prd_mrgn_prcntg ,a.tot_prmo_sls_rtl_amt ,a.tot_prmo_sls_unt ,a.tot_prmo_sls_cst_amt ,coalesce(round(a.tot_prmo_sls_cst_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_auc ,coalesce(round(a.tot_prmo_sls_rtl_amt/a.tot_prmo_sls_unt,2), 0.0000) as tot_prmo_sls_aur ,coalesce(round(a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_amt ,coalesce(round((a.tot_prmo_sls_rtl_amt - a.tot_prmo_sls_cst_amt)/a.tot_prmo_sls_rtl_amt,2), 0.0000) as tot_prmo_sls_prd_mrgn_prcntg ,a.tot_reg_sls_rtl_amt ,a.tot_reg_sls_unt ,a.tot_reg_sls_cst_amt ,coalesce(round(a.tot_reg_sls_cst_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_auc ,coalesce(round(a.tot_reg_sls_rtl_amt/a.tot_reg_sls_unt,2), 0.0000) as tot_reg_sls_aur ,coalesce(round(a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_amt ,coalesce(round((a.tot_reg_sls_rtl_amt - a.tot_reg_sls_cst_amt)/a.tot_reg_sls_rtl_amt,2), 0.0000) as tot_reg_sls_prd_mrgn_prcntg ,a.last_updated_timestamp ,a.trxn_dt from (select s.loc_nbr ,s.itm_nbr ,s.ord_typ_cd ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as tot_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as tot_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt)* s.curr_exch_rt),2), 0.0000) as tot_sls_cst_amt ,coalesce(round(sum(s.rtn_unt_excl_void_qty),2), 0.0) as rtn_unt_qty ,coalesce(round(sum(s.rtn_unt_excl_void_amt * s.curr_exch_rt),2), 0.0000) as rtn_rtl_amt ,coalesce(round(sum(s.ext_rtn_cst_amt * s.curr_exch_rt),2), 0.0000) as rtn_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty),2), 0.0) as grs_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.assc_disc_amt) * s.curr_exch_rt),2), 0.0000) as grs_sls_rtl_amt ,coalesce(round(sum(s.ext_sls_cst_amt * s.curr_exch_rt),2), 0.0000) as grs_sls_cst_amt ,coalesce(round(sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0) as net_sls_unt_qty ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt),2), 0.0000) as net_sls_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as net_sls_avg_unt_cst_amt ,coalesce(round(sum((s.sls_unt_excl_void_amt + s.rtn_unt_excl_void_amt+s.assc_disc_amt) * s.curr_exch_rt) / sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_rtl_amt ,coalesce(round(sum((s.ext_sls_cst_amt + s.ext_rtn_cst_amt) * s.curr_exch_rt) /sum(s.sls_unt_excl_void_qty + s.rtn_unt_excl_void_qty),2), 0.0000) as tot_sls_avg_unt_cst_amt --,null as net_sls_prod_mrgn_amt --,null as tot_sls_prod_mrgn_amt --,null as net_sls_prod_mrgn_pct --,null as prod_aur ,coalesce(round(sum(s.assc_disc_amt * s.curr_exch_rt),2), 0.0000) as assc_disc_amt ,coalesce(round(sum(s.disc_unt_amt * s.curr_exch_rt),2), 0.0000) as disc_unt_amt ,coalesce(round(sum(s.clr_sls_rtl_amt),2), 0.0000) as tot_clr_sls_rtl_amt ,coalesce(round(sum(s.clr_sls_unt),2), 0.0) as tot_clr_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.clr_sls_unt),2), 0.0000) as tot_clr_sls_cst_amt ,coalesce(round(sum(s.gvawy_sls_rtl_amt * s.curr_exch_rt),2), 0.0000) as tot_gvawy_sls_rtl_amt ,coalesce(round(sum(s.gvawy_sls_unt),2), 0.0) as tot_gvawy_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.gvawy_sls_unt),2), 0.0000) as tot_gvawy_sls_cst_amt ,coalesce(round(sum(s.prmo_sls_rtl_amt),2), 0.0000) as tot_prmo_sls_rtl_amt ,coalesce(round(sum(s.prmo_sls_unt),2), 0.0) as tot_prmo_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.prmo_sls_unt),2), 0.0000) as tot_prmo_sls_cst_amt ,coalesce(round(sum(s.reg_sls_rtl_amt),2), 0.0000) as tot_reg_sls_rtl_amt ,coalesce(round(sum(s.reg_sls_unt),2), 0.0) as tot_reg_sls_unt ,coalesce(round(sum(s.unt_cst_amt * s.curr_exch_rt * s.reg_sls_unt),2), 0.0000) as tot_reg_sls_cst_amt ,from_unixtime(unix_timestamp(),'yyyy-mm-dd hh:mm:ss') as last_updated_timestamp ,s.trxn_dt from analytics_db.sale_summary_day_loc_item s  inner join (select ref.transaction_date from analytics_db.transaction_line_summary_ref ref where ref.process_date=current_date group by ref.transaction_date) a  on s.trxn_dt=a.transaction_date left join (select coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a') src_appl_fld_val from scct_db.car_pos_xref where tgt_tbl_nme='shpg_trxn_charge' group by coalesce(case when trim(src_appl_fld_val)='' then null else trim(src_appl_fld_val) end, 'n/a')) cpxref on s.itm_nbr = cpxref.src_appl_fld_val where s.gft_crd_sls_ind=0  and s.void_ind=0 and cpxref.src_appl_fld_val is null group by s.trxn_dt,s.last_updated_timestamp,s.loc_nbr,s.itm_nbr,s.ord_typ_cd) a;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_job_control -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_job_control  ---source: scct_raw_db table : likp_raw, zmm_inv_bal_raw, cdpos_raw, scct_db table : delivery_master, scct_work_db table : mseg_work ---load type: full ---back posting: no ---author: ryadav ---last modified date: 01/02/2019 --------------------------------------------------------------------------   ------------------------- ---loading scct_job_control stage 1 base data -------------------------  ! echo started loading into scct_db.scct_job_control ;
! echo completed loading into scct_db.scct_job_control ;
---jobname:scct-e2e_dashboard-hive-stg1-scct_db.scct_location -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scct_location ---source: table : kna1 , lfa1, analytics_view.location ---load type: full ---back posting: no ---author: ryadav ---last modified date: 12/26/2018 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  ------------------------- ---loading scct_db.scct_location target table data ------------------------- insert overwrite table scct_db.scct_location select  location_number, location_name, case when location_type_code='04' then location_display_name else location_name end as location_display_name, brand_code, legacy_store_number, coalesce(latitudedegrees,0), coalesce(longitudedegrees,0), lzone, ort01, district_code, district_description, region_code, region_description, organization_number, organization_name from analytics_view.location l join sap_stage0.kna1 kna1 on trim(l.location_number) = trim(kna1.kunnr) left outer join (select facility_brand_name,store_number,latitudedegrees,longitudedegrees from accruent_stage0.accruent_prod_vw_mgt_facility_lat_long where program = 'company owned')c on l.brand_code = substr(facility_brand_name,-3) and l.legacy_store_number = c.store_number union all  select  lifnr, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_nme, case when trim(name2) in('','.','' ,'@') or trim(name2) is null then trim(name1) else trim(name2) end as loc_display_name, 'unk', 0, coalesce(latitude,0), coalesce(longitude,0), coalesce(lzone,'n/a'), ort01, 'n/a', 'n/a', 'n/a', 'n/a', 'n/a', 'n/a' from (select  lifnr, name1, name2, lzone, ort01 from scct_raw_db.lfa1_raw  where substr(lifnr,1,3) in ('003','004')  and trim(lifnr) not in (select trim(kunnr) from sap_stage0.kna1 ) ) x  left outer join bira_stage0.bods_stg_dim_longitude_latitude y  on x.lifnr = y.loc_cd;
! echo completed loading into scct_db.scct_location ;
---jobname:scct-scem-hive-stg1-scct_db.scem_consolidated_view_intl_ib_tracking -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_consolidated_view_intl_ib_tracking  ---source: sap_stage0 table : saptrx_eh_hdr_scem1,saptrx_eh_cntrl_scem2 ---description: this script will load the data to target table scct_db.scem_consolidated_view_intl_ib_tracking ---load type: full ---back posting: no ---author: akoti ---created date: 23/07/2019 --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 26aug19 scctp4-2295 ryadav added semicolon at the end of hql -- 01.00.00.03 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.04 28nov19 scctp4-2623 akoti redesigned the code to pick the data from scem1 & scem2 final table, converted to full refresh -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_consolidated_view_intl_ib_tracking target table data -------------------------  set tez.job.name=stage2:scem_consolidated_view_intl_ib_tracking :load target table scem_consolidated_view_intl_ib_tracking ;
! echo started loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
! echo completed loading into scct_db.scem_consolidated_view_intl_ib_tracking ;
---jobname:scct-scem-hive-stg1-scct_db.scem_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_events  ---source: sap_stage0 table : saptrx_evm_hdr ---load type: full ---back posting: no ---author: sdhal ---created date: 05/04/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.exec.max.dynamic.partitions=2000;
------------------------- ---loading scem_events target table data -------------------------  set tez.job.name=stage1:scem_events :load target table scem_events ;
! echo started loading into scct_db.scem_events ;
! echo completed loading into scct_db.scem_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_expected_events -------------------------------------------------------------------------- ---target: work table: scct_db.scem_expected_events ---source: sap_stage0 table : saptrx_eh_hdr and saptrx_eh_expev ;
---load type: full ---back posting: no ---author: ssoma ---created date: 02/04/2019 --------------------------------------------------------------------------  set hive.exec.max.dynamic.partitions=20000;
------------------------- ---loading stage1 table scct_db.scem_expected_events  -------------------------  set tez.job.name=stage1:scem_expected_events:load target table scem_expected_events;
! echo started loading into scct_db.scem_expected_events;
insert overwrite table scct_db.scem_expected_events partition(created_dt)  select  coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.active_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as active_dt_tm ,coalesce(case when trim(ehhdr.ao_client)='' then null else trim(ehhdr.ao_client) end, 0) as ao_client ,coalesce(case when trim(ehhdr.ao_id)='' then null else trim(ehhdr.ao_id) end, 'n/a') as ao_id ,coalesce(case when trim(ehhdr.ao_system)='' then null else trim(ehhdr.ao_system) end, 'n/a') as ao_system ,coalesce(case when trim(ehhdr.ao_type)='' then null else trim(ehhdr.ao_type) end, 'n/a') as ao_type ,coalesce(case when trim(ehhdr.app_log_flag)='' then null else trim(ehhdr.app_log_flag) end, 'n/a') as app_log_flg ,coalesce(case when trim(ehhdr.bus_proc_type)='' then null else trim(ehhdr.bus_proc_type) end, 'n/a') as bus_proc_typ ,coalesce(case when trim(ehhdr.bw_posted)='' then null else trim(ehhdr.bw_posted) end, 'n/a') as bw_posted ,coalesce(case when trim(ehhdr.chk_unexpected)='' then null else trim(ehhdr.chk_unexpected) end, 'n/a') as chk_unexpected ,coalesce(case when trim(ehhdr.client)='' then null else trim(ehhdr.client) end, 0) as client_hdr ,coalesce(case when trim(ehhdr.created_by)='' then null else trim(ehhdr.created_by) end, 'n/a') as created_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as created_dt_tm ,coalesce(case when trim(ehhdr.df_exist)='' then null else trim(ehhdr.df_exist) end, 'n/a') as df_exist ,coalesce(case when trim(ehhdr.ee_eval_proc)='' then null else trim(ehhdr.ee_eval_proc) end, 'n/a') as ee_eval_proc ,coalesce(case when trim(ehhdr.ee_monitor_proc)='' then null else trim(ehhdr.ee_monitor_proc) end, 'n/a') as ee_monitor_proc ,coalesce(case when trim(ehhdr.ee_profile)='' then null else trim(ehhdr.ee_profile) end, 'n/a') as ee_profile ,coalesce(case when trim(ehhdr.eh_active)='' then null else trim(ehhdr.eh_active) end, 'n/a') as eh_active ,coalesce(case when trim(ehhdr.eh_archived)='' then null else trim(ehhdr.eh_archived) end, 'n/a') as eh_archived ,coalesce(case when trim(ehhdr.eh_changeable)='' then null else trim(ehhdr.eh_changeable) end, 'n/a') as eh_changeable ,coalesce(case when trim(ehhdr.eh_deleted)='' then null else trim(ehhdr.eh_deleted) end, 'n/a') as eh_deleted ,coalesce(case when trim(ehhdr.eh_guid)='' then null else trim(ehhdr.eh_guid) end, 'n/a') as eh_guid_hdr ,coalesce(case when trim(ehhdr.eh_type)='' then null else trim(ehhdr.eh_type) end, 'n/a') as eh_type ,coalesce(case when trim(ehhdr.em_version)='' then null else trim(ehhdr.em_version) end, 'n/a') as em_version ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.end_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as end_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.inactive_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as inactive_dt_tm ,coalesce(ehhdr.last_cntrl_nbr, 0) as last_cntrl_nbr ,coalesce(ehhdr.last_eehst_nbr, 0) as last_eehst_nbr ,coalesce(ehhdr.last_ermsg_nbr, 0) as last_ermsg_nbr ,coalesce(ehhdr.last_evmsg_nbr, 0) as last_evmsg_nbr ,coalesce(case when trim(ehhdr.last_ev_msg)='' then null else trim(ehhdr.last_ev_msg) end, 'n/a') as last_ev_msg ,coalesce(ehhdr.last_expev_nbr, 0) as last_expev_nbr ,coalesce(ehhdr.last_hier_nbr , 0) as last_hier_nbr ,coalesce(ehhdr.last_info_nbr , 0) as last_info_nbr ,coalesce(ehhdr.last_measr_nbr, 0) as last_measr_nbr ,coalesce(ehhdr.last_mehst_nbr, 0) as last_mehst_nbr ,coalesce(ehhdr.last_qryid_nbr, 0) as last_qryid_nbr ,coalesce(ehhdr.last_sthst_nbr, 0) as last_sthst_nbr ,coalesce(ehhdr.last_task_nbr , 0) as last_task_nbr ,coalesce(ehhdr.last_trkid_nbr, 0) as last_trkid_nbr ,coalesce(case when trim(ehhdr.loglvl_ehpost )='' then null else trim(ehhdr.loglvl_ehpost ) end, 'n/a') as loglvl_ehpost ,coalesce(case when trim(ehhdr.loglvl_extupd )='' then null else trim(ehhdr.loglvl_extupd ) end, 'n/a') as loglvl_extupd ,coalesce(case when trim(ehhdr.loglvl_msgprc )='' then null else trim(ehhdr.loglvl_msgprc ) end, 'n/a') as loglvl_msgprc ,coalesce(case when trim(ehhdr.match_ee_stored)='' then null else trim(ehhdr.match_ee_stored) end, 'n/a') as match_ee_stored ,coalesce(case when trim(ehhdr.ruleset_id)='' then null else trim(ehhdr.ruleset_id) end, 'n/a') as ruleset_id ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.start_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as start_dt_tm ,coalesce(case when trim(ehhdr.status_prof)='' then null else trim(ehhdr.status_prof) end, 'n/a') as status_prof ,coalesce(case when trim(ehhdr.trackingid )='' then null else trim(ehhdr.trackingid) end, 'n/a') as tracking_id ,coalesce(case when trim(ehhdr.trackingidtype)='' then null else trim(ehhdr.trackingidtype) end, 'n/a') as tracking_id_typ ,coalesce(case when trim(ehhdr.updated_by)='' then null else trim(ehhdr.updated_by) end, 'n/a') as updated_by ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.updated_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as updated_dt_tm ,coalesce(case when trim(ehhdr.update_proc_1)='' then null else trim(ehhdr.update_proc_1) end, 'n/a') as update_proc_1 ,coalesce(case when trim(ehhdr.update_proc_2)='' then null else trim(ehhdr.update_proc_2) end, 'n/a') as update_proc_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.ao_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as ao_ev_exp_dt_tm ,coalesce(case when trim(ehdtl.chk_data_func)='' then null else trim(ehdtl.chk_data_func) end, 'n/a') as chk_data_func ,coalesce(case when trim(ehdtl.chk_loc_func)='' then null else trim(ehdtl.chk_loc_func) end, 'n/a') as chk_loc_func ,coalesce(case when trim(ehdtl.chk_partner_func)='' then null else trim(ehdtl.chk_partner_func) end, 'n/a') as chk_partner_func ,coalesce(case when trim(ehdtl.city)='' then null else trim(ehdtl.city) end, 'n/a') as city ,coalesce(case when trim(ehdtl.client)='' then null else trim(ehdtl.client) end, 0) as client_dtl ,coalesce(case when trim(ehdtl.country)='' then null else trim(ehdtl.country) end, 'n/a') as country ,coalesce(case when trim(ehdtl.datacs)='' then null else trim(ehdtl.datacs) end, 'n/a') as datacs ,coalesce(case when trim(ehdtl.dataid)='' then null else trim(ehdtl.dataid) end, 'n/a') as dataid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime1 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_1 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime2 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_2 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime3 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_3 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime4 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_4 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.datetime5 as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as dt_tm_5 ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.earliest_msg_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as earliest_msg_dt_tm ,coalesce(case when trim(ehdtl.eh_guid)='' then null else trim(ehdtl.eh_guid) end, 'n/a') as eh_guid_dtl ,coalesce(case when trim(ehdtl.event_code)='' then null else trim(ehdtl.event_code) end, 'n/a') as event_cd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_utc_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.event_exp_index as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as event_exp_index_dt_tm ,coalesce(case when trim(ehdtl.event_exp_tzone)='' then null else trim(ehdtl.event_exp_tzone) end, 'n/a') as event_exp_tzone ,coalesce(case when trim(ehdtl.event_group)='' then null else trim(ehdtl.event_group) end, 'n/a') as event_group ,coalesce(case when trim(ehdtl.event_status)='' then null else trim(ehdtl.event_status) end, 'n/a') as event_status ,coalesce(case when trim(ehdtl.event_tzone)='' then null else trim(ehdtl.event_tzone) end, 'n/a') as event_tzone ,coalesce(case when trim(ehdtl.ev_exp_calc_rule)='' then null else trim(ehdtl.ev_exp_calc_rule) end, 'n/a') as ev_exp_calc_rule ,coalesce(ehdtl.ev_exp_date_seq, 0) as ev_exp_date_seq ,coalesce(ehdtl.ev_exp_dur, 0) as ev_exp_dur ,coalesce(case when trim(ehdtl.ev_exp_dur_sign)='' then null else trim(ehdtl.ev_exp_dur_sign) end, 'n/a') as ev_exp_dur_sign ,coalesce(ehdtl.ev_tolerance, 0) as ev_tolerance ,coalesce(case when trim(ehdtl.ev_tol_rule)='' then null else trim(ehdtl.ev_tol_rule) end, 'n/a') as ev_tol_rule ,coalesce(case when trim(ehdtl.first_ev_evcd)='' then null else trim(ehdtl.first_ev_evcd) end, 'n/a') as first_ev_evcd ,coalesce(case when trim(ehdtl.forecast)='' then null else trim(ehdtl.forecast) end, 'n/a') as forecast ,coalesce(ehdtl.group_nbr, 0) as group_nbr ,coalesce(case when trim(ehdtl.itemident)='' then null else trim(ehdtl.itemident) end, 'n/a') as item_id_ent ,coalesce(lpad(ehdtl.item_nbr,18,0), 0) as itm_nbr ,coalesce(case when trim(ehdtl.language)='' then null else trim(ehdtl.language) end, 0) as language ,coalesce(case when trim(ehdtl.last_ev_evcd)='' then null else trim(ehdtl.last_ev_evcd) end, 'n/a') as last_ev_evcd ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_ev_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_ev_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.latest_msg_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as latest_msg_dt_tm ,coalesce(case when trim(ehdtl.locat_desc)='' then null else trim(ehdtl.locat_desc) end, 'n/a') as locat_desc ,coalesce(case when trim(ehdtl.loc_id_1)='' then null else trim(ehdtl.loc_id_1) end, 'n/a') as loc_id_1 ,coalesce(case when trim(ehdtl.loc_id_2)='' then null else trim(ehdtl.loc_id_2) end, 'n/a') as loc_id_2 ,coalesce(case when trim(ehdtl.loc_id_type)='' then null else trim(ehdtl.loc_id_type) end, 'n/a') as loc_id_type ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_date_utc as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_dt_tm_utc ,coalesce(case when trim(ehdtl.msg_exp_calc_rul)='' then null else trim(ehdtl.msg_exp_calc_rul) end, 'n/a') as msg_exp_calc_rul ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_exp_dt_tm ,coalesce(ehdtl.msg_exp_date_seq, 0) as msg_exp_date_seq ,coalesce(ehdtl.msg_exp_dur, 0) as msg_exp_dur ,coalesce(case when trim(ehdtl.msg_exp_dur_sign)='' then null else trim(ehdtl.msg_exp_dur_sign) end, 'n/a') as msg_exp_dur_sign ,coalesce(case when trim(ehdtl.msg_exp_index)='' then null else trim(ehdtl.msg_exp_index) end, 'n/a') as msg_exp_index ,coalesce(case when trim(ehdtl.msg_exp_tzone)='' then null else trim(ehdtl.msg_exp_tzone) end, 'n/a') as msg_exp_tzone ,coalesce(case when trim(ehdtl.msg_guid)='' then null else trim(ehdtl.msg_guid) end, 'n/a') as msg_guid ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.msg_rcvd_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as msg_rcvd_dt_tm ,coalesce(case when trim(ehdtl.msg_rcvd_tzone)='' then null else trim(ehdtl.msg_rcvd_tzone) end, 'n/a') as msg_rcvd_tzone ,coalesce(case when trim(ehdtl.msg_status)='' then null else trim(ehdtl.msg_status) end, 'n/a') as msg_status ,coalesce(ehdtl.msg_tolerance, 0) as msg_tolerance ,coalesce(case when trim(ehdtl.msg_tol_rule)='' then null else trim(ehdtl.msg_tol_rule) end, 'n/a') as msg_tol_rule ,coalesce(case when trim(ehdtl.no_data_val)='' then null else trim(ehdtl.no_data_val) end, 'n/a') as no_data_val ,coalesce(case when trim(ehdtl.no_loc_val)='' then null else trim(ehdtl.no_loc_val) end, 'n/a') as no_loc_val ,coalesce(case when trim(ehdtl.no_partner_val)='' then null else trim(ehdtl.no_partner_val) end, 'n/a') as no_partner_val ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_ev_exp_date as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_ev_exp_dt_tm ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehdtl.orig_msg_exp_dte as bigint),1,14),'yyyymmddhhmmss'),'yyyy-mm-dd hh:mm:ss'), '9999-12-31 00:00:00') as orig_msg_exp_dt_tm ,coalesce(case when trim(ehdtl.partner_id)='' then null else trim(ehdtl.partner_id) end, 'n/a') as partner_id ,coalesce(case when trim(ehdtl.partner_id_type)='' then null else trim(ehdtl.partner_id_type) end, 'n/a') as partner_id_typ ,coalesce(case when trim(ehdtl.postal_cd)='' then null else trim(ehdtl.postal_cd) end, 'n/a') as postal_cd ,coalesce(case when trim(ehdtl.pred_flag)='' then null else trim(ehdtl.pred_flag) end, 'n/a') as pred_flg ,coalesce(ehdtl.priority, 0) as priority ,coalesce(ehdtl.refdistance, 0) as refdistance ,coalesce(case when trim(ehdtl.refdistunit)='' then null else trim(ehdtl.refdistunit) end, 0) as refdistunit ,coalesce(ehdtl.refeffdurat, 0) as refeffdurat ,coalesce(ehdtl.refmilestone, 0) as refmilestone ,coalesce(ehdtl.reftotdurat, 0) as reftotdurat ,coalesce(case when trim(ehdtl.region)='' then null else trim(ehdtl.region) end, 'n/a') as region ,coalesce(case when trim(ehdtl.reprocess_flag)='' then null else trim(ehdtl.reprocess_flag) end, 'n/a') as reprocess_flg ,coalesce(ehdtl.req_set_nbr, 0) as req_set_nbr ,coalesce(case when trim(ehdtl.req_type)='' then null else trim(ehdtl.req_type) end, 'n/a') as req_typ ,coalesce(ehdtl.seq_nbr, 0) as seq_nbr ,coalesce(case when trim(ehdtl.tzone1)='' then null else trim(ehdtl.tzone1) end, 'n/a') as tzone1 ,coalesce(case when trim(ehdtl.tzone2)='' then null else trim(ehdtl.tzone2) end, 'n/a') as tzone2 ,coalesce(case when trim(ehdtl.tzone3)='' then null else trim(ehdtl.tzone3) end, 'n/a') as tzone3 ,coalesce(case when trim(ehdtl.tzone4)='' then null else trim(ehdtl.tzone4) end, 'n/a') as tzone4 ,coalesce(case when trim(ehdtl.tzone5)='' then null else trim(ehdtl.tzone5) end, 'n/a') as tzone5 ,coalesce(case when trim(ehdtl.user_def_ind)='' then null else trim(ehdtl.user_def_ind) end, 'n/a') as user_def_ind ,coalesce(from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd'), '9999-12-31') as created_dt from sap_stage0.saptrx_eh_hdr ehhdr inner join sap_stage0.saptrx_eh_expev ehdtl on ehhdr.eh_guid = ehdtl.eh_guid where from_unixtime(unix_timestamp(substring(cast(ehhdr.created_date as bigint),1,8),'yyyymmdd'),'yyyy-mm-dd') between date_sub(current_date,90) and current_date
! echo completed loading into scct_db.scem_expected_events;
