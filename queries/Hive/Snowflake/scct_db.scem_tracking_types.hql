! echo completed loading into scct_db.scem_expected_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_events  ---source: sap_stage0 table : scem_tracking_events_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_events ---load type: full ---back posting: no --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic --  ------------------------- ---job related hive settings to merge files for target table ------------------------- set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_events target table data -------------------------  set tez.job.name=stage2:scem_tracking_events :load target table scem_tracking_events ;
! echo started loading into scct_db.scem_tracking_events ;
! echo completed loading into scct_db.scem_tracking_events ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_objects -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_objects  ---source: scct_work_db table : scem_tracking_objects_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_objects ---load type: full ---back posting: no ---author: sdhal ---created date: 29/07/2019 -------------------------------------------------------------------------- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 29jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 19sep19 scctp4-2460 ryadav increased tez container size -- 01.00.00.04 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_objects target table data -------------------------  set tez.job.name=stage2:scem_tracking_objects :load target table scem_tracking_objects ;
! echo started loading into scct_db.scem_tracking_objects ;
! echo completed loading into scct_db.scem_tracking_objects ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_types -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_types  ---source: scct_work_db table : scem_tracking_types_temp, scct_db table : scem_tracking_types ---load type: full ---back posting: no ---author: ryadav ---created date: 03/14/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_types target table data -------------------------  set tez.job.name=stage1:scem_tracking_types :load target table scem_tracking_types ;
! echo started loading into scct_db.scem_tracking_types ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_TRACKING_TYPES
(SELECT COALESCE(CASE WHEN TRIM( APP_LOG_FLAG) = '' THEN NULL ELSE TRIM( APP_LOG_FLAG) END, 'n/a') AS APP_LOG_FLG, COALESCE(CASE WHEN TRIM( AUTH_PROFILE) = '' THEN NULL ELSE TRIM( AUTH_PROFILE) END, 'n/a') AS AUTH_PROFILE, COALESCE(CASE WHEN TRIM( BWPROFILE) = '' THEN NULL ELSE TRIM( BWPROFILE) END, 'n/a') AS BW_PROFILE, COALESCE(CASE WHEN TRIM( CHGDOC_ACTIV) = '' THEN NULL ELSE TRIM( CHGDOC_ACTIV) END, 'n/a') AS CHGDOC_ACTIVE, COALESCE(CASE WHEN TRIM( CHK_UNEXPECTED) = '' THEN NULL ELSE TRIM( CHK_UNEXPECTED) END, 'n/a') AS CHK_UNEXPECTED, COALESCE(CASE WHEN TRIM( CONDITION_ID) = '' THEN NULL ELSE TRIM( CONDITION_ID) END, 'n/a') AS CONDITION_ID, COALESCE(CASE WHEN TRIM( COND_RULE) = '' THEN NULL ELSE TRIM( COND_RULE) END, 'n/a') AS COND_RULE, COALESCE(CASE WHEN TRIM( CREATED_BY) = '' THEN NULL ELSE TRIM( CREATED_BY) END, 'n/a') AS CREATED_BY, COALESCE(CASE WHEN CREATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(CREATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS CREATED_DT, COALESCE(CASE WHEN TRIM( DISABLE_EEHIST) = '' THEN NULL ELSE TRIM( DISABLE_EEHIST) END, 'n/a') AS DISABLE_EE_HIST, COALESCE(CASE WHEN TRIM( DISABLE_MSMHIST) = '' THEN NULL ELSE TRIM( DISABLE_MSMHIST) END, 'n/a') AS DISABLE_MSM_HIST, COALESCE(CASE WHEN TRIM( DISABLE_STATHIST) = '' THEN NULL ELSE TRIM( DISABLE_STATHIST) END, 'n/a') AS DISABLE_STATHIST, COALESCE(CASE WHEN TRIM( EE_PROCESS_RULE) = '' THEN NULL ELSE TRIM( EE_PROCESS_RULE) END, 'n/a') AS EE_PROCESS_RULE, COALESCE(CASE WHEN TRIM( EE_PROFILE) = '' THEN NULL ELSE TRIM( EE_PROFILE) END, 'n/a') AS EE_PROFILE, COALESCE(CASE WHEN TRIM( EVM_EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EVM_EXT_TABLE_ID) END, 'n/a') AS EVM_EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EXT_TABLE_ID) END, 'n/a') AS EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( LOGLVL_EHPOST) = '' THEN NULL ELSE TRIM( LOGLVL_EHPOST) END, 'n/a') AS LOG_LVL_EH_POST, COALESCE(CASE WHEN TRIM( LOGLVL_EXTUPD) = '' THEN NULL ELSE TRIM( LOGLVL_EXTUPD) END, 'n/a') AS LOG_LVL_EXT_UPD, COALESCE(CASE WHEN TRIM( LOGLVL_MSGPRC) = '' THEN NULL ELSE TRIM( LOGLVL_MSGPRC) END, 'n/a') AS LOG_LVL_MSG_PRC, COALESCE(CASE WHEN TRIM( MANDT) = '' THEN NULL ELSE TRIM( MANDT) END, 0) AS MANDT, COALESCE(CASE WHEN TRIM( NO_DEFAULT_QRYID) = '' THEN NULL ELSE TRIM( NO_DEFAULT_QRYID) END, 'n/a') AS NO_DEFAULT_QRY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_CNTRL) = '' THEN NULL ELSE TRIM( NO_LOAD_CNTRL) END, 'n/a') AS NO_LOAD_CNTRL, COALESCE(CASE WHEN TRIM( NO_LOAD_HIER) = '' THEN NULL ELSE TRIM( NO_LOAD_HIER) END, 'n/a') AS NO_LOAD_HIER, COALESCE(CASE WHEN TRIM( NO_LOAD_INFO) = '' THEN NULL ELSE TRIM( NO_LOAD_INFO) END, 'n/a') AS NO_LOAD_INFO, COALESCE(CASE WHEN TRIM( NO_LOAD_QUERYID) = '' THEN NULL ELSE TRIM( NO_LOAD_QUERYID) END, 'n/a') AS NO_LOAD_QUERY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_SYS) = '' THEN NULL ELSE TRIM( NO_LOAD_SYS) END, 'n/a') AS NO_LOAD_SYS, COALESCE(CASE WHEN TRIM( NO_LOAD_TASKS) = '' THEN NULL ELSE TRIM( NO_LOAD_TASKS) END, 'n/a') AS NO_LOAD_TASKS, COALESCE(CASE WHEN TRIM( NO_LOAD_TRKID) = '' THEN NULL ELSE TRIM( NO_LOAD_TRKID) END, 'n/a') AS NO_LOAD_TRK_ID, COALESCE(CASE WHEN PRIORITY = '' THEN NULL ELSE PRIORITY END, 0) AS PRIORITY, COALESCE(CASE WHEN TRIM( REPROC_SORT_RULE) = '' THEN NULL ELSE TRIM( REPROC_SORT_RULE) END, 'n/a') AS REPROC_SORT_RULE, COALESCE(CASE WHEN TRIM( RULESET) = '' THEN NULL ELSE TRIM( RULESET) END, 'n/a') AS RULESET, COALESCE(CASE WHEN TRIM( STATUS_PROF) = '' THEN NULL ELSE TRIM( STATUS_PROF) END, 'n/a') AS STATUS_PROF, COALESCE(CASE WHEN TRIM( TRK_MODE) = '' THEN NULL ELSE TRIM( TRK_MODE) END, 'n/a') AS TRK_MODE, COALESCE(CASE WHEN TRIM( TRK_OBJ_TYPE) = '' THEN NULL ELSE TRIM( TRK_OBJ_TYPE) END, 'n/a') AS TRK_OBJ_TYPE, COALESCE(CASE WHEN TRIM( TRK_TYPE) = '' THEN NULL ELSE TRIM( TRK_TYPE) END, 'n/a') AS TRK_TYPE, COALESCE(CASE WHEN TRIM( UPDATED_BY) = '' THEN NULL ELSE TRIM( UPDATED_BY) END, 'n/a') AS UPDATED_BY, COALESCE(CASE WHEN UPDATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(UPDATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS UPDATED_DT, COALESCE(CASE WHEN TRIM( UPDATE_PROC_1) = '' THEN NULL ELSE TRIM( UPDATE_PROC_1) END, 'n/a') AS UPDATE_PROC_1, COALESCE(CASE WHEN TRIM( UPDATE_PROC_2) = '' THEN NULL ELSE TRIM( UPDATE_PROC_2) END, 'n/a') AS UPDATE_PROC_2
FROM SAP_STAGE0.SAPTRX_TRKTYPE);
! echo completed loading into scct_db.scem_expected_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_events  ---source: sap_stage0 table : scem_tracking_events_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_events ---load type: full ---back posting: no --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic --  ------------------------- ---job related hive settings to merge files for target table ------------------------- set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_events target table data -------------------------  set tez.job.name=stage2:scem_tracking_events :load target table scem_tracking_events ;
! echo started loading into scct_db.scem_tracking_events ;
! echo completed loading into scct_db.scem_tracking_events ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_objects -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_objects  ---source: scct_work_db table : scem_tracking_objects_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_objects ---load type: full ---back posting: no ---author: sdhal ---created date: 29/07/2019 -------------------------------------------------------------------------- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 29jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 19sep19 scctp4-2460 ryadav increased tez container size -- 01.00.00.04 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_objects target table data -------------------------  set tez.job.name=stage2:scem_tracking_objects :load target table scem_tracking_objects ;
! echo started loading into scct_db.scem_tracking_objects ;
! echo completed loading into scct_db.scem_tracking_objects ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_types -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_types  ---source: scct_work_db table : scem_tracking_types_temp, scct_db table : scem_tracking_types ---load type: full ---back posting: no ---author: ryadav ---created date: 03/14/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_types target table data -------------------------  set tez.job.name=stage1:scem_tracking_types :load target table scem_tracking_types ;
! echo started loading into scct_db.scem_tracking_types ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_TRACKING_TYPES
(SELECT COALESCE(CASE WHEN TRIM( APP_LOG_FLAG) = '' THEN NULL ELSE TRIM( APP_LOG_FLAG) END, 'n/a') AS APP_LOG_FLG, COALESCE(CASE WHEN TRIM( AUTH_PROFILE) = '' THEN NULL ELSE TRIM( AUTH_PROFILE) END, 'n/a') AS AUTH_PROFILE, COALESCE(CASE WHEN TRIM( BWPROFILE) = '' THEN NULL ELSE TRIM( BWPROFILE) END, 'n/a') AS BW_PROFILE, COALESCE(CASE WHEN TRIM( CHGDOC_ACTIV) = '' THEN NULL ELSE TRIM( CHGDOC_ACTIV) END, 'n/a') AS CHGDOC_ACTIVE, COALESCE(CASE WHEN TRIM( CHK_UNEXPECTED) = '' THEN NULL ELSE TRIM( CHK_UNEXPECTED) END, 'n/a') AS CHK_UNEXPECTED, COALESCE(CASE WHEN TRIM( CONDITION_ID) = '' THEN NULL ELSE TRIM( CONDITION_ID) END, 'n/a') AS CONDITION_ID, COALESCE(CASE WHEN TRIM( COND_RULE) = '' THEN NULL ELSE TRIM( COND_RULE) END, 'n/a') AS COND_RULE, COALESCE(CASE WHEN TRIM( CREATED_BY) = '' THEN NULL ELSE TRIM( CREATED_BY) END, 'n/a') AS CREATED_BY, COALESCE(CASE WHEN CREATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(CREATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS CREATED_DT, COALESCE(CASE WHEN TRIM( DISABLE_EEHIST) = '' THEN NULL ELSE TRIM( DISABLE_EEHIST) END, 'n/a') AS DISABLE_EE_HIST, COALESCE(CASE WHEN TRIM( DISABLE_MSMHIST) = '' THEN NULL ELSE TRIM( DISABLE_MSMHIST) END, 'n/a') AS DISABLE_MSM_HIST, COALESCE(CASE WHEN TRIM( DISABLE_STATHIST) = '' THEN NULL ELSE TRIM( DISABLE_STATHIST) END, 'n/a') AS DISABLE_STATHIST, COALESCE(CASE WHEN TRIM( EE_PROCESS_RULE) = '' THEN NULL ELSE TRIM( EE_PROCESS_RULE) END, 'n/a') AS EE_PROCESS_RULE, COALESCE(CASE WHEN TRIM( EE_PROFILE) = '' THEN NULL ELSE TRIM( EE_PROFILE) END, 'n/a') AS EE_PROFILE, COALESCE(CASE WHEN TRIM( EVM_EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EVM_EXT_TABLE_ID) END, 'n/a') AS EVM_EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EXT_TABLE_ID) END, 'n/a') AS EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( LOGLVL_EHPOST) = '' THEN NULL ELSE TRIM( LOGLVL_EHPOST) END, 'n/a') AS LOG_LVL_EH_POST, COALESCE(CASE WHEN TRIM( LOGLVL_EXTUPD) = '' THEN NULL ELSE TRIM( LOGLVL_EXTUPD) END, 'n/a') AS LOG_LVL_EXT_UPD, COALESCE(CASE WHEN TRIM( LOGLVL_MSGPRC) = '' THEN NULL ELSE TRIM( LOGLVL_MSGPRC) END, 'n/a') AS LOG_LVL_MSG_PRC, COALESCE(CASE WHEN TRIM( MANDT) = '' THEN NULL ELSE TRIM( MANDT) END, 0) AS MANDT, COALESCE(CASE WHEN TRIM( NO_DEFAULT_QRYID) = '' THEN NULL ELSE TRIM( NO_DEFAULT_QRYID) END, 'n/a') AS NO_DEFAULT_QRY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_CNTRL) = '' THEN NULL ELSE TRIM( NO_LOAD_CNTRL) END, 'n/a') AS NO_LOAD_CNTRL, COALESCE(CASE WHEN TRIM( NO_LOAD_HIER) = '' THEN NULL ELSE TRIM( NO_LOAD_HIER) END, 'n/a') AS NO_LOAD_HIER, COALESCE(CASE WHEN TRIM( NO_LOAD_INFO) = '' THEN NULL ELSE TRIM( NO_LOAD_INFO) END, 'n/a') AS NO_LOAD_INFO, COALESCE(CASE WHEN TRIM( NO_LOAD_QUERYID) = '' THEN NULL ELSE TRIM( NO_LOAD_QUERYID) END, 'n/a') AS NO_LOAD_QUERY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_SYS) = '' THEN NULL ELSE TRIM( NO_LOAD_SYS) END, 'n/a') AS NO_LOAD_SYS, COALESCE(CASE WHEN TRIM( NO_LOAD_TASKS) = '' THEN NULL ELSE TRIM( NO_LOAD_TASKS) END, 'n/a') AS NO_LOAD_TASKS, COALESCE(CASE WHEN TRIM( NO_LOAD_TRKID) = '' THEN NULL ELSE TRIM( NO_LOAD_TRKID) END, 'n/a') AS NO_LOAD_TRK_ID, COALESCE(CASE WHEN PRIORITY = '' THEN NULL ELSE PRIORITY END, 0) AS PRIORITY, COALESCE(CASE WHEN TRIM( REPROC_SORT_RULE) = '' THEN NULL ELSE TRIM( REPROC_SORT_RULE) END, 'n/a') AS REPROC_SORT_RULE, COALESCE(CASE WHEN TRIM( RULESET) = '' THEN NULL ELSE TRIM( RULESET) END, 'n/a') AS RULESET, COALESCE(CASE WHEN TRIM( STATUS_PROF) = '' THEN NULL ELSE TRIM( STATUS_PROF) END, 'n/a') AS STATUS_PROF, COALESCE(CASE WHEN TRIM( TRK_MODE) = '' THEN NULL ELSE TRIM( TRK_MODE) END, 'n/a') AS TRK_MODE, COALESCE(CASE WHEN TRIM( TRK_OBJ_TYPE) = '' THEN NULL ELSE TRIM( TRK_OBJ_TYPE) END, 'n/a') AS TRK_OBJ_TYPE, COALESCE(CASE WHEN TRIM( TRK_TYPE) = '' THEN NULL ELSE TRIM( TRK_TYPE) END, 'n/a') AS TRK_TYPE, COALESCE(CASE WHEN TRIM( UPDATED_BY) = '' THEN NULL ELSE TRIM( UPDATED_BY) END, 'n/a') AS UPDATED_BY, COALESCE(CASE WHEN UPDATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(UPDATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS UPDATED_DT, COALESCE(CASE WHEN TRIM( UPDATE_PROC_1) = '' THEN NULL ELSE TRIM( UPDATE_PROC_1) END, 'n/a') AS UPDATE_PROC_1, COALESCE(CASE WHEN TRIM( UPDATE_PROC_2) = '' THEN NULL ELSE TRIM( UPDATE_PROC_2) END, 'n/a') AS UPDATE_PROC_2
FROM SAP_STAGE0.SAPTRX_TRKTYPE);
! echo completed loading into scct_db.scem_expected_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_events  ---source: sap_stage0 table : scem_tracking_events_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_events ---load type: full ---back posting: no --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic --  ------------------------- ---job related hive settings to merge files for target table ------------------------- set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_events target table data -------------------------  set tez.job.name=stage2:scem_tracking_events :load target table scem_tracking_events ;
! echo started loading into scct_db.scem_tracking_events ;
! echo completed loading into scct_db.scem_tracking_events ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_objects -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_objects  ---source: scct_work_db table : scem_tracking_objects_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_objects ---load type: full ---back posting: no ---author: sdhal ---created date: 29/07/2019 -------------------------------------------------------------------------- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 29jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 19sep19 scctp4-2460 ryadav increased tez container size -- 01.00.00.04 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_objects target table data -------------------------  set tez.job.name=stage2:scem_tracking_objects :load target table scem_tracking_objects ;
! echo started loading into scct_db.scem_tracking_objects ;
! echo completed loading into scct_db.scem_tracking_objects ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_types -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_types  ---source: scct_work_db table : scem_tracking_types_temp, scct_db table : scem_tracking_types ---load type: full ---back posting: no ---author: ryadav ---created date: 03/14/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_types target table data -------------------------  set tez.job.name=stage1:scem_tracking_types :load target table scem_tracking_types ;
! echo started loading into scct_db.scem_tracking_types ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_TRACKING_TYPES
(SELECT COALESCE(CASE WHEN TRIM( APP_LOG_FLAG) = '' THEN NULL ELSE TRIM( APP_LOG_FLAG) END, 'n/a') AS APP_LOG_FLG, COALESCE(CASE WHEN TRIM( AUTH_PROFILE) = '' THEN NULL ELSE TRIM( AUTH_PROFILE) END, 'n/a') AS AUTH_PROFILE, COALESCE(CASE WHEN TRIM( BWPROFILE) = '' THEN NULL ELSE TRIM( BWPROFILE) END, 'n/a') AS BW_PROFILE, COALESCE(CASE WHEN TRIM( CHGDOC_ACTIV) = '' THEN NULL ELSE TRIM( CHGDOC_ACTIV) END, 'n/a') AS CHGDOC_ACTIVE, COALESCE(CASE WHEN TRIM( CHK_UNEXPECTED) = '' THEN NULL ELSE TRIM( CHK_UNEXPECTED) END, 'n/a') AS CHK_UNEXPECTED, COALESCE(CASE WHEN TRIM( CONDITION_ID) = '' THEN NULL ELSE TRIM( CONDITION_ID) END, 'n/a') AS CONDITION_ID, COALESCE(CASE WHEN TRIM( COND_RULE) = '' THEN NULL ELSE TRIM( COND_RULE) END, 'n/a') AS COND_RULE, COALESCE(CASE WHEN TRIM( CREATED_BY) = '' THEN NULL ELSE TRIM( CREATED_BY) END, 'n/a') AS CREATED_BY, COALESCE(CASE WHEN CREATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(CREATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS CREATED_DT, COALESCE(CASE WHEN TRIM( DISABLE_EEHIST) = '' THEN NULL ELSE TRIM( DISABLE_EEHIST) END, 'n/a') AS DISABLE_EE_HIST, COALESCE(CASE WHEN TRIM( DISABLE_MSMHIST) = '' THEN NULL ELSE TRIM( DISABLE_MSMHIST) END, 'n/a') AS DISABLE_MSM_HIST, COALESCE(CASE WHEN TRIM( DISABLE_STATHIST) = '' THEN NULL ELSE TRIM( DISABLE_STATHIST) END, 'n/a') AS DISABLE_STATHIST, COALESCE(CASE WHEN TRIM( EE_PROCESS_RULE) = '' THEN NULL ELSE TRIM( EE_PROCESS_RULE) END, 'n/a') AS EE_PROCESS_RULE, COALESCE(CASE WHEN TRIM( EE_PROFILE) = '' THEN NULL ELSE TRIM( EE_PROFILE) END, 'n/a') AS EE_PROFILE, COALESCE(CASE WHEN TRIM( EVM_EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EVM_EXT_TABLE_ID) END, 'n/a') AS EVM_EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EXT_TABLE_ID) END, 'n/a') AS EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( LOGLVL_EHPOST) = '' THEN NULL ELSE TRIM( LOGLVL_EHPOST) END, 'n/a') AS LOG_LVL_EH_POST, COALESCE(CASE WHEN TRIM( LOGLVL_EXTUPD) = '' THEN NULL ELSE TRIM( LOGLVL_EXTUPD) END, 'n/a') AS LOG_LVL_EXT_UPD, COALESCE(CASE WHEN TRIM( LOGLVL_MSGPRC) = '' THEN NULL ELSE TRIM( LOGLVL_MSGPRC) END, 'n/a') AS LOG_LVL_MSG_PRC, COALESCE(CASE WHEN TRIM( MANDT) = '' THEN NULL ELSE TRIM( MANDT) END, 0) AS MANDT, COALESCE(CASE WHEN TRIM( NO_DEFAULT_QRYID) = '' THEN NULL ELSE TRIM( NO_DEFAULT_QRYID) END, 'n/a') AS NO_DEFAULT_QRY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_CNTRL) = '' THEN NULL ELSE TRIM( NO_LOAD_CNTRL) END, 'n/a') AS NO_LOAD_CNTRL, COALESCE(CASE WHEN TRIM( NO_LOAD_HIER) = '' THEN NULL ELSE TRIM( NO_LOAD_HIER) END, 'n/a') AS NO_LOAD_HIER, COALESCE(CASE WHEN TRIM( NO_LOAD_INFO) = '' THEN NULL ELSE TRIM( NO_LOAD_INFO) END, 'n/a') AS NO_LOAD_INFO, COALESCE(CASE WHEN TRIM( NO_LOAD_QUERYID) = '' THEN NULL ELSE TRIM( NO_LOAD_QUERYID) END, 'n/a') AS NO_LOAD_QUERY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_SYS) = '' THEN NULL ELSE TRIM( NO_LOAD_SYS) END, 'n/a') AS NO_LOAD_SYS, COALESCE(CASE WHEN TRIM( NO_LOAD_TASKS) = '' THEN NULL ELSE TRIM( NO_LOAD_TASKS) END, 'n/a') AS NO_LOAD_TASKS, COALESCE(CASE WHEN TRIM( NO_LOAD_TRKID) = '' THEN NULL ELSE TRIM( NO_LOAD_TRKID) END, 'n/a') AS NO_LOAD_TRK_ID, COALESCE(CASE WHEN PRIORITY = '' THEN NULL ELSE PRIORITY END, 0) AS PRIORITY, COALESCE(CASE WHEN TRIM( REPROC_SORT_RULE) = '' THEN NULL ELSE TRIM( REPROC_SORT_RULE) END, 'n/a') AS REPROC_SORT_RULE, COALESCE(CASE WHEN TRIM( RULESET) = '' THEN NULL ELSE TRIM( RULESET) END, 'n/a') AS RULESET, COALESCE(CASE WHEN TRIM( STATUS_PROF) = '' THEN NULL ELSE TRIM( STATUS_PROF) END, 'n/a') AS STATUS_PROF, COALESCE(CASE WHEN TRIM( TRK_MODE) = '' THEN NULL ELSE TRIM( TRK_MODE) END, 'n/a') AS TRK_MODE, COALESCE(CASE WHEN TRIM( TRK_OBJ_TYPE) = '' THEN NULL ELSE TRIM( TRK_OBJ_TYPE) END, 'n/a') AS TRK_OBJ_TYPE, COALESCE(CASE WHEN TRIM( TRK_TYPE) = '' THEN NULL ELSE TRIM( TRK_TYPE) END, 'n/a') AS TRK_TYPE, COALESCE(CASE WHEN TRIM( UPDATED_BY) = '' THEN NULL ELSE TRIM( UPDATED_BY) END, 'n/a') AS UPDATED_BY, COALESCE(CASE WHEN UPDATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(UPDATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS UPDATED_DT, COALESCE(CASE WHEN TRIM( UPDATE_PROC_1) = '' THEN NULL ELSE TRIM( UPDATE_PROC_1) END, 'n/a') AS UPDATE_PROC_1, COALESCE(CASE WHEN TRIM( UPDATE_PROC_2) = '' THEN NULL ELSE TRIM( UPDATE_PROC_2) END, 'n/a') AS UPDATE_PROC_2
FROM SAP_STAGE0.SAPTRX_TRKTYPE);
! echo completed loading into scct_db.scem_expected_events;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_events -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_events  ---source: sap_stage0 table : scem_tracking_events_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_events ---load type: full ---back posting: no --------------------------------------------------------------------------  -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 23jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti changed patition key to eh_created_date and added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic --  ------------------------- ---job related hive settings to merge files for target table ------------------------- set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_events target table data -------------------------  set tez.job.name=stage2:scem_tracking_events :load target table scem_tracking_events ;
! echo started loading into scct_db.scem_tracking_events ;
! echo completed loading into scct_db.scem_tracking_events ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_objects -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_objects  ---source: scct_work_db table : scem_tracking_objects_tmp ---description: this script will load the delta data to target table scct_db.scem_tracking_objects ---load type: full ---back posting: no ---author: sdhal ---created date: 29/07/2019 -------------------------------------------------------------------------- -- history information -- -- revision date jira developer-id comments -- ----------- ------- ---------- ------------ ---------------------------- -- 01.00.00.01 29jul19 sdhal initial version -- 01.00.00.02 06sep19 scctp4-2187 akoti added logic to ignore records where di_operation_type <> 'd' -- 01.00.00.03 19sep19 scctp4-2460 ryadav increased tez container size -- 01.00.00.04 29nov19 scctp4-2623 akoti removed partition column & settings, changed di_operation_type logic -- 01.00.00.05 21jan20 scctp4-2988 akoti changed column name from act_po_gr_date to act_gac_date --  ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_objects target table data -------------------------  set tez.job.name=stage2:scem_tracking_objects :load target table scem_tracking_objects ;
! echo started loading into scct_db.scem_tracking_objects ;
! echo completed loading into scct_db.scem_tracking_objects ;
---jobname:scct-scem-hive-stg1-scct_db.scem_tracking_types -------------------------------------------------------------------------- ---target: stage1 table: scct_db.scem_tracking_types  ---source: scct_work_db table : scem_tracking_types_temp, scct_db table : scem_tracking_types ---load type: full ---back posting: no ---author: ryadav ---created date: 03/14/2019 --------------------------------------------------------------------------   ------------------------- ---job related hive settings to merge files for target table -------------------------  set hive.merge.orcfile.stripe.level=false;
------------------------- ---loading scem_tracking_types target table data -------------------------  set tez.job.name=stage1:scem_tracking_types :load target table scem_tracking_types ;
! echo started loading into scct_db.scem_tracking_types ;
INSERT OVERWRITE INTO SCCT_DB.SCEM_TRACKING_TYPES
(SELECT COALESCE(CASE WHEN TRIM( APP_LOG_FLAG) = '' THEN NULL ELSE TRIM( APP_LOG_FLAG) END, 'n/a') AS APP_LOG_FLG, COALESCE(CASE WHEN TRIM( AUTH_PROFILE) = '' THEN NULL ELSE TRIM( AUTH_PROFILE) END, 'n/a') AS AUTH_PROFILE, COALESCE(CASE WHEN TRIM( BWPROFILE) = '' THEN NULL ELSE TRIM( BWPROFILE) END, 'n/a') AS BW_PROFILE, COALESCE(CASE WHEN TRIM( CHGDOC_ACTIV) = '' THEN NULL ELSE TRIM( CHGDOC_ACTIV) END, 'n/a') AS CHGDOC_ACTIVE, COALESCE(CASE WHEN TRIM( CHK_UNEXPECTED) = '' THEN NULL ELSE TRIM( CHK_UNEXPECTED) END, 'n/a') AS CHK_UNEXPECTED, COALESCE(CASE WHEN TRIM( CONDITION_ID) = '' THEN NULL ELSE TRIM( CONDITION_ID) END, 'n/a') AS CONDITION_ID, COALESCE(CASE WHEN TRIM( COND_RULE) = '' THEN NULL ELSE TRIM( COND_RULE) END, 'n/a') AS COND_RULE, COALESCE(CASE WHEN TRIM( CREATED_BY) = '' THEN NULL ELSE TRIM( CREATED_BY) END, 'n/a') AS CREATED_BY, COALESCE(CASE WHEN CREATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(CREATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS CREATED_DT, COALESCE(CASE WHEN TRIM( DISABLE_EEHIST) = '' THEN NULL ELSE TRIM( DISABLE_EEHIST) END, 'n/a') AS DISABLE_EE_HIST, COALESCE(CASE WHEN TRIM( DISABLE_MSMHIST) = '' THEN NULL ELSE TRIM( DISABLE_MSMHIST) END, 'n/a') AS DISABLE_MSM_HIST, COALESCE(CASE WHEN TRIM( DISABLE_STATHIST) = '' THEN NULL ELSE TRIM( DISABLE_STATHIST) END, 'n/a') AS DISABLE_STATHIST, COALESCE(CASE WHEN TRIM( EE_PROCESS_RULE) = '' THEN NULL ELSE TRIM( EE_PROCESS_RULE) END, 'n/a') AS EE_PROCESS_RULE, COALESCE(CASE WHEN TRIM( EE_PROFILE) = '' THEN NULL ELSE TRIM( EE_PROFILE) END, 'n/a') AS EE_PROFILE, COALESCE(CASE WHEN TRIM( EVM_EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EVM_EXT_TABLE_ID) END, 'n/a') AS EVM_EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( EXT_TABLE_ID) = '' THEN NULL ELSE TRIM( EXT_TABLE_ID) END, 'n/a') AS EXT_TABLE_ID, COALESCE(CASE WHEN TRIM( LOGLVL_EHPOST) = '' THEN NULL ELSE TRIM( LOGLVL_EHPOST) END, 'n/a') AS LOG_LVL_EH_POST, COALESCE(CASE WHEN TRIM( LOGLVL_EXTUPD) = '' THEN NULL ELSE TRIM( LOGLVL_EXTUPD) END, 'n/a') AS LOG_LVL_EXT_UPD, COALESCE(CASE WHEN TRIM( LOGLVL_MSGPRC) = '' THEN NULL ELSE TRIM( LOGLVL_MSGPRC) END, 'n/a') AS LOG_LVL_MSG_PRC, COALESCE(CASE WHEN TRIM( MANDT) = '' THEN NULL ELSE TRIM( MANDT) END, 0) AS MANDT, COALESCE(CASE WHEN TRIM( NO_DEFAULT_QRYID) = '' THEN NULL ELSE TRIM( NO_DEFAULT_QRYID) END, 'n/a') AS NO_DEFAULT_QRY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_CNTRL) = '' THEN NULL ELSE TRIM( NO_LOAD_CNTRL) END, 'n/a') AS NO_LOAD_CNTRL, COALESCE(CASE WHEN TRIM( NO_LOAD_HIER) = '' THEN NULL ELSE TRIM( NO_LOAD_HIER) END, 'n/a') AS NO_LOAD_HIER, COALESCE(CASE WHEN TRIM( NO_LOAD_INFO) = '' THEN NULL ELSE TRIM( NO_LOAD_INFO) END, 'n/a') AS NO_LOAD_INFO, COALESCE(CASE WHEN TRIM( NO_LOAD_QUERYID) = '' THEN NULL ELSE TRIM( NO_LOAD_QUERYID) END, 'n/a') AS NO_LOAD_QUERY_ID, COALESCE(CASE WHEN TRIM( NO_LOAD_SYS) = '' THEN NULL ELSE TRIM( NO_LOAD_SYS) END, 'n/a') AS NO_LOAD_SYS, COALESCE(CASE WHEN TRIM( NO_LOAD_TASKS) = '' THEN NULL ELSE TRIM( NO_LOAD_TASKS) END, 'n/a') AS NO_LOAD_TASKS, COALESCE(CASE WHEN TRIM( NO_LOAD_TRKID) = '' THEN NULL ELSE TRIM( NO_LOAD_TRKID) END, 'n/a') AS NO_LOAD_TRK_ID, COALESCE(CASE WHEN PRIORITY = '' THEN NULL ELSE PRIORITY END, 0) AS PRIORITY, COALESCE(CASE WHEN TRIM( REPROC_SORT_RULE) = '' THEN NULL ELSE TRIM( REPROC_SORT_RULE) END, 'n/a') AS REPROC_SORT_RULE, COALESCE(CASE WHEN TRIM( RULESET) = '' THEN NULL ELSE TRIM( RULESET) END, 'n/a') AS RULESET, COALESCE(CASE WHEN TRIM( STATUS_PROF) = '' THEN NULL ELSE TRIM( STATUS_PROF) END, 'n/a') AS STATUS_PROF, COALESCE(CASE WHEN TRIM( TRK_MODE) = '' THEN NULL ELSE TRIM( TRK_MODE) END, 'n/a') AS TRK_MODE, COALESCE(CASE WHEN TRIM( TRK_OBJ_TYPE) = '' THEN NULL ELSE TRIM( TRK_OBJ_TYPE) END, 'n/a') AS TRK_OBJ_TYPE, COALESCE(CASE WHEN TRIM( TRK_TYPE) = '' THEN NULL ELSE TRIM( TRK_TYPE) END, 'n/a') AS TRK_TYPE, COALESCE(CASE WHEN TRIM( UPDATED_BY) = '' THEN NULL ELSE TRIM( UPDATED_BY) END, 'n/a') AS UPDATED_BY, COALESCE(CASE WHEN UPDATED_DATE = 0 THEN NULL ELSE FROM_UNIXTIME(UNIX_TIMESTAMP(SUBSTRING(CAST(UPDATED_DATE AS BIGINT) FROM 1 FOR 8), 'yyyymmdd'), 'yyyy-mm-dd') END, '9999-12-31') AS UPDATED_DT, COALESCE(CASE WHEN TRIM( UPDATE_PROC_1) = '' THEN NULL ELSE TRIM( UPDATE_PROC_1) END, 'n/a') AS UPDATE_PROC_1, COALESCE(CASE WHEN TRIM( UPDATE_PROC_2) = '' THEN NULL ELSE TRIM( UPDATE_PROC_2) END, 'n/a') AS UPDATE_PROC_2
FROM SAP_STAGE0.SAPTRX_TRKTYPE);
